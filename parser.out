Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> print_statement
Rule 5     statement -> assign_statement
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> function_definition
Rule 10    statement -> return_statement
Rule 11    statement -> input_statement
Rule 12    statement -> expression SEMICOLON
Rule 13    input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON
Rule 14    print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 15    print_arguments -> print_arguments COMMA expression
Rule 16    print_arguments -> expression
Rule 17    assign_statement -> lvalue EQUALS expression SEMICOLON
Rule 18    lvalue -> ID
Rule 19    lvalue -> expression LBRACKET expression RBRACKET
Rule 20    argument_list -> argument_list COMMA expression
Rule 21    argument_list -> expression
Rule 22    if_statement -> IF LPAREN expression RPAREN block
Rule 23    if_statement -> IF LPAREN expression RPAREN block ELSE block
Rule 24    while_statement -> WHILE LPAREN expression RPAREN block
Rule 25    for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
Rule 26    function_definition -> FUNC ID LPAREN parameters RPAREN block
Rule 27    expression -> ID LPAREN argument_list RPAREN
Rule 28    parameters -> parameters COMMA ID
Rule 29    parameters -> ID
Rule 30    parameters -> empty
Rule 31    block -> LKEY statement_list RKEY
Rule 32    return_statement -> RETURN expression SEMICOLON
Rule 33    expression -> expression DOT INSERT LPAREN expression RPAREN
Rule 34    expression -> expression DOT EXPLODE LPAREN expression RPAREN
Rule 35    expression -> expression DOT SIZE LPAREN RPAREN
Rule 36    expression -> expression DOT GET LPAREN expression RPAREN
Rule 37    expression -> expression PLUS expression
Rule 38    expression -> expression MINUS expression
Rule 39    expression -> expression MULT expression
Rule 40    expression -> expression DIVIDE expression
Rule 41    expression -> expression MODULE expression
Rule 42    expression -> expression LESS expression
Rule 43    expression -> expression GREATER expression
Rule 44    expression -> expression LESSEQ expression
Rule 45    expression -> expression GREATEREQ expression
Rule 46    expression -> expression EQ expression
Rule 47    expression -> expression NEQ expression
Rule 48    expression -> expression AND expression
Rule 49    expression -> expression OR expression
Rule 50    expression -> NOT expression
Rule 51    expression -> MINUS expression
Rule 52    expression -> LPAREN expression RPAREN
Rule 53    expression -> NUMBER
Rule 54    expression -> STRING
Rule 55    expression -> BOOLEAN
Rule 56    expression -> ID
Rule 57    expression -> LBRACKET list_elements RBRACKET
Rule 58    list_elements -> expression
Rule 59    list_elements -> list_elements COMMA expression
Rule 60    empty -> <empty>

Terminals, with rules where they appear

AND                  : 48
BOOLEAN              : 55
COMMA                : 15 20 28 59
DIVIDE               : 40
DOT                  : 33 34 35 36
ELSE                 : 23
EQ                   : 46
EQUALS               : 17
EXPLODE              : 34
FOR                  : 25
FUNC                 : 26
GET                  : 36
GREATER              : 43
GREATEREQ            : 45
ID                   : 18 26 27 28 29 56
IF                   : 22 23
INPUT                : 13
INSERT               : 33
LBRACKET             : 19 57
LESS                 : 42
LESSEQ               : 44
LKEY                 : 31
LPAREN               : 13 14 22 23 24 25 26 27 33 34 35 36 52
MINUS                : 38 51
MODULE               : 41
MULT                 : 39
NEQ                  : 47
NOT                  : 50
NUMBER               : 53
OR                   : 49
PLUS                 : 37
PRINT                : 14
RBRACKET             : 19 57
RETURN               : 32
RKEY                 : 31
RPAREN               : 13 14 22 23 24 25 26 27 33 34 35 36 52
SEMICOLON            : 12 13 14 17 25 32
SIZE                 : 35
STRING               : 54
WHILE                : 24
error                : 

Nonterminals, with rules where they appear

argument_list        : 20 27
assign_statement     : 5 25 25
block                : 22 23 23 24 25 26
empty                : 30
expression           : 12 15 16 17 19 19 20 21 22 23 24 25 32 33 33 34 34 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52 58 59
for_statement        : 8
function_definition  : 9
if_statement         : 6
input_statement      : 11
list_elements        : 57 59
lvalue               : 13 17
parameters           : 26 28
print_arguments      : 14 15
print_statement      : 4
program              : 0
return_statement     : 10
statement            : 2 3
statement_list       : 1 2 31
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . input_statement
    (12) statement -> . expression SEMICOLON
    (14) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (22) if_statement -> . IF LPAREN expression RPAREN block
    (23) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (24) while_statement -> . WHILE LPAREN expression RPAREN block
    (25) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (26) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (32) return_statement -> . RETURN expression SEMICOLON
    (13) input_statement -> . INPUT LPAREN lvalue RPAREN SEMICOLON
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET

    PRINT           shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    FUNC            shift and go to state 19
    RETURN          shift and go to state 21
    INPUT           shift and go to state 22
    ID              shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    input_statement                shift and go to state 11
    expression                     shift and go to state 12
    lvalue                         shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . input_statement
    (12) statement -> . expression SEMICOLON
    (14) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (22) if_statement -> . IF LPAREN expression RPAREN block
    (23) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (24) while_statement -> . WHILE LPAREN expression RPAREN block
    (25) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (26) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (32) return_statement -> . RETURN expression SEMICOLON
    (13) input_statement -> . INPUT LPAREN lvalue RPAREN SEMICOLON
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    FUNC            shift and go to state 19
    RETURN          shift and go to state 21
    INPUT           shift and go to state 22
    ID              shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    statement                      shift and go to state 29
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    input_statement                shift and go to state 11
    expression                     shift and go to state 12
    lvalue                         shift and go to state 15

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    FUNC            reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    INPUT           reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    NOT             reduce using rule 3 (statement_list -> statement .)
    MINUS           reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    BOOLEAN         reduce using rule 3 (statement_list -> statement .)
    LBRACKET        reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RKEY            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> print_statement .

    PRINT           reduce using rule 4 (statement -> print_statement .)
    IF              reduce using rule 4 (statement -> print_statement .)
    WHILE           reduce using rule 4 (statement -> print_statement .)
    FOR             reduce using rule 4 (statement -> print_statement .)
    FUNC            reduce using rule 4 (statement -> print_statement .)
    RETURN          reduce using rule 4 (statement -> print_statement .)
    INPUT           reduce using rule 4 (statement -> print_statement .)
    ID              reduce using rule 4 (statement -> print_statement .)
    NOT             reduce using rule 4 (statement -> print_statement .)
    MINUS           reduce using rule 4 (statement -> print_statement .)
    LPAREN          reduce using rule 4 (statement -> print_statement .)
    NUMBER          reduce using rule 4 (statement -> print_statement .)
    STRING          reduce using rule 4 (statement -> print_statement .)
    BOOLEAN         reduce using rule 4 (statement -> print_statement .)
    LBRACKET        reduce using rule 4 (statement -> print_statement .)
    $end            reduce using rule 4 (statement -> print_statement .)
    RKEY            reduce using rule 4 (statement -> print_statement .)


state 5

    (5) statement -> assign_statement .

    PRINT           reduce using rule 5 (statement -> assign_statement .)
    IF              reduce using rule 5 (statement -> assign_statement .)
    WHILE           reduce using rule 5 (statement -> assign_statement .)
    FOR             reduce using rule 5 (statement -> assign_statement .)
    FUNC            reduce using rule 5 (statement -> assign_statement .)
    RETURN          reduce using rule 5 (statement -> assign_statement .)
    INPUT           reduce using rule 5 (statement -> assign_statement .)
    ID              reduce using rule 5 (statement -> assign_statement .)
    NOT             reduce using rule 5 (statement -> assign_statement .)
    MINUS           reduce using rule 5 (statement -> assign_statement .)
    LPAREN          reduce using rule 5 (statement -> assign_statement .)
    NUMBER          reduce using rule 5 (statement -> assign_statement .)
    STRING          reduce using rule 5 (statement -> assign_statement .)
    BOOLEAN         reduce using rule 5 (statement -> assign_statement .)
    LBRACKET        reduce using rule 5 (statement -> assign_statement .)
    $end            reduce using rule 5 (statement -> assign_statement .)
    RKEY            reduce using rule 5 (statement -> assign_statement .)


state 6

    (6) statement -> if_statement .

    PRINT           reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    FUNC            reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    INPUT           reduce using rule 6 (statement -> if_statement .)
    ID              reduce using rule 6 (statement -> if_statement .)
    NOT             reduce using rule 6 (statement -> if_statement .)
    MINUS           reduce using rule 6 (statement -> if_statement .)
    LPAREN          reduce using rule 6 (statement -> if_statement .)
    NUMBER          reduce using rule 6 (statement -> if_statement .)
    STRING          reduce using rule 6 (statement -> if_statement .)
    BOOLEAN         reduce using rule 6 (statement -> if_statement .)
    LBRACKET        reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RKEY            reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    PRINT           reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    FUNC            reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    INPUT           reduce using rule 7 (statement -> while_statement .)
    ID              reduce using rule 7 (statement -> while_statement .)
    NOT             reduce using rule 7 (statement -> while_statement .)
    MINUS           reduce using rule 7 (statement -> while_statement .)
    LPAREN          reduce using rule 7 (statement -> while_statement .)
    NUMBER          reduce using rule 7 (statement -> while_statement .)
    STRING          reduce using rule 7 (statement -> while_statement .)
    BOOLEAN         reduce using rule 7 (statement -> while_statement .)
    LBRACKET        reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RKEY            reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> for_statement .

    PRINT           reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    FUNC            reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    INPUT           reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    NOT             reduce using rule 8 (statement -> for_statement .)
    MINUS           reduce using rule 8 (statement -> for_statement .)
    LPAREN          reduce using rule 8 (statement -> for_statement .)
    NUMBER          reduce using rule 8 (statement -> for_statement .)
    STRING          reduce using rule 8 (statement -> for_statement .)
    BOOLEAN         reduce using rule 8 (statement -> for_statement .)
    LBRACKET        reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    RKEY            reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> function_definition .

    PRINT           reduce using rule 9 (statement -> function_definition .)
    IF              reduce using rule 9 (statement -> function_definition .)
    WHILE           reduce using rule 9 (statement -> function_definition .)
    FOR             reduce using rule 9 (statement -> function_definition .)
    FUNC            reduce using rule 9 (statement -> function_definition .)
    RETURN          reduce using rule 9 (statement -> function_definition .)
    INPUT           reduce using rule 9 (statement -> function_definition .)
    ID              reduce using rule 9 (statement -> function_definition .)
    NOT             reduce using rule 9 (statement -> function_definition .)
    MINUS           reduce using rule 9 (statement -> function_definition .)
    LPAREN          reduce using rule 9 (statement -> function_definition .)
    NUMBER          reduce using rule 9 (statement -> function_definition .)
    STRING          reduce using rule 9 (statement -> function_definition .)
    BOOLEAN         reduce using rule 9 (statement -> function_definition .)
    LBRACKET        reduce using rule 9 (statement -> function_definition .)
    $end            reduce using rule 9 (statement -> function_definition .)
    RKEY            reduce using rule 9 (statement -> function_definition .)


state 10

    (10) statement -> return_statement .

    PRINT           reduce using rule 10 (statement -> return_statement .)
    IF              reduce using rule 10 (statement -> return_statement .)
    WHILE           reduce using rule 10 (statement -> return_statement .)
    FOR             reduce using rule 10 (statement -> return_statement .)
    FUNC            reduce using rule 10 (statement -> return_statement .)
    RETURN          reduce using rule 10 (statement -> return_statement .)
    INPUT           reduce using rule 10 (statement -> return_statement .)
    ID              reduce using rule 10 (statement -> return_statement .)
    NOT             reduce using rule 10 (statement -> return_statement .)
    MINUS           reduce using rule 10 (statement -> return_statement .)
    LPAREN          reduce using rule 10 (statement -> return_statement .)
    NUMBER          reduce using rule 10 (statement -> return_statement .)
    STRING          reduce using rule 10 (statement -> return_statement .)
    BOOLEAN         reduce using rule 10 (statement -> return_statement .)
    LBRACKET        reduce using rule 10 (statement -> return_statement .)
    $end            reduce using rule 10 (statement -> return_statement .)
    RKEY            reduce using rule 10 (statement -> return_statement .)


state 11

    (11) statement -> input_statement .

    PRINT           reduce using rule 11 (statement -> input_statement .)
    IF              reduce using rule 11 (statement -> input_statement .)
    WHILE           reduce using rule 11 (statement -> input_statement .)
    FOR             reduce using rule 11 (statement -> input_statement .)
    FUNC            reduce using rule 11 (statement -> input_statement .)
    RETURN          reduce using rule 11 (statement -> input_statement .)
    INPUT           reduce using rule 11 (statement -> input_statement .)
    ID              reduce using rule 11 (statement -> input_statement .)
    NOT             reduce using rule 11 (statement -> input_statement .)
    MINUS           reduce using rule 11 (statement -> input_statement .)
    LPAREN          reduce using rule 11 (statement -> input_statement .)
    NUMBER          reduce using rule 11 (statement -> input_statement .)
    STRING          reduce using rule 11 (statement -> input_statement .)
    BOOLEAN         reduce using rule 11 (statement -> input_statement .)
    LBRACKET        reduce using rule 11 (statement -> input_statement .)
    $end            reduce using rule 11 (statement -> input_statement .)
    RKEY            reduce using rule 11 (statement -> input_statement .)


state 12

    (12) statement -> expression . SEMICOLON
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression
    (19) lvalue -> expression . LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 30
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    LBRACKET        shift and go to state 45


state 13

    (14) print_statement -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 46


state 14

    (52) expression -> LPAREN . expression RPAREN
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 47

state 15

    (17) assign_statement -> lvalue . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 49


state 16

    (22) if_statement -> IF . LPAREN expression RPAREN block
    (23) if_statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 50


state 17

    (24) while_statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 51


state 18

    (25) for_statement -> FOR . LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block

    LPAREN          shift and go to state 52


state 19

    (26) function_definition -> FUNC . ID LPAREN parameters RPAREN block

    ID              shift and go to state 53


state 20

    (27) expression -> ID . LPAREN argument_list RPAREN
    (56) expression -> ID .
    (18) lvalue -> ID .

    LPAREN          shift and go to state 54
    SEMICOLON       reduce using rule 56 (expression -> ID .)
    DOT             reduce using rule 56 (expression -> ID .)
    PLUS            reduce using rule 56 (expression -> ID .)
    MINUS           reduce using rule 56 (expression -> ID .)
    MULT            reduce using rule 56 (expression -> ID .)
    DIVIDE          reduce using rule 56 (expression -> ID .)
    MODULE          reduce using rule 56 (expression -> ID .)
    LESS            reduce using rule 56 (expression -> ID .)
    GREATER         reduce using rule 56 (expression -> ID .)
    LESSEQ          reduce using rule 56 (expression -> ID .)
    GREATEREQ       reduce using rule 56 (expression -> ID .)
    EQ              reduce using rule 56 (expression -> ID .)
    NEQ             reduce using rule 56 (expression -> ID .)
    AND             reduce using rule 56 (expression -> ID .)
    OR              reduce using rule 56 (expression -> ID .)
    LBRACKET        reduce using rule 56 (expression -> ID .)
    EQUALS          reduce using rule 18 (lvalue -> ID .)


state 21

    (32) return_statement -> RETURN . expression SEMICOLON
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 55

state 22

    (13) input_statement -> INPUT . LPAREN lvalue RPAREN SEMICOLON

    LPAREN          shift and go to state 56


state 23

    (51) expression -> MINUS . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 57

state 24

    (50) expression -> NOT . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 58

state 25

    (53) expression -> NUMBER .

    SEMICOLON       reduce using rule 53 (expression -> NUMBER .)
    DOT             reduce using rule 53 (expression -> NUMBER .)
    PLUS            reduce using rule 53 (expression -> NUMBER .)
    MINUS           reduce using rule 53 (expression -> NUMBER .)
    MULT            reduce using rule 53 (expression -> NUMBER .)
    DIVIDE          reduce using rule 53 (expression -> NUMBER .)
    MODULE          reduce using rule 53 (expression -> NUMBER .)
    LESS            reduce using rule 53 (expression -> NUMBER .)
    GREATER         reduce using rule 53 (expression -> NUMBER .)
    LESSEQ          reduce using rule 53 (expression -> NUMBER .)
    GREATEREQ       reduce using rule 53 (expression -> NUMBER .)
    EQ              reduce using rule 53 (expression -> NUMBER .)
    NEQ             reduce using rule 53 (expression -> NUMBER .)
    AND             reduce using rule 53 (expression -> NUMBER .)
    OR              reduce using rule 53 (expression -> NUMBER .)
    LBRACKET        reduce using rule 53 (expression -> NUMBER .)
    RPAREN          reduce using rule 53 (expression -> NUMBER .)
    RBRACKET        reduce using rule 53 (expression -> NUMBER .)
    COMMA           reduce using rule 53 (expression -> NUMBER .)


state 26

    (54) expression -> STRING .

    SEMICOLON       reduce using rule 54 (expression -> STRING .)
    DOT             reduce using rule 54 (expression -> STRING .)
    PLUS            reduce using rule 54 (expression -> STRING .)
    MINUS           reduce using rule 54 (expression -> STRING .)
    MULT            reduce using rule 54 (expression -> STRING .)
    DIVIDE          reduce using rule 54 (expression -> STRING .)
    MODULE          reduce using rule 54 (expression -> STRING .)
    LESS            reduce using rule 54 (expression -> STRING .)
    GREATER         reduce using rule 54 (expression -> STRING .)
    LESSEQ          reduce using rule 54 (expression -> STRING .)
    GREATEREQ       reduce using rule 54 (expression -> STRING .)
    EQ              reduce using rule 54 (expression -> STRING .)
    NEQ             reduce using rule 54 (expression -> STRING .)
    AND             reduce using rule 54 (expression -> STRING .)
    OR              reduce using rule 54 (expression -> STRING .)
    LBRACKET        reduce using rule 54 (expression -> STRING .)
    RPAREN          reduce using rule 54 (expression -> STRING .)
    RBRACKET        reduce using rule 54 (expression -> STRING .)
    COMMA           reduce using rule 54 (expression -> STRING .)


state 27

    (55) expression -> BOOLEAN .

    SEMICOLON       reduce using rule 55 (expression -> BOOLEAN .)
    DOT             reduce using rule 55 (expression -> BOOLEAN .)
    PLUS            reduce using rule 55 (expression -> BOOLEAN .)
    MINUS           reduce using rule 55 (expression -> BOOLEAN .)
    MULT            reduce using rule 55 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 55 (expression -> BOOLEAN .)
    MODULE          reduce using rule 55 (expression -> BOOLEAN .)
    LESS            reduce using rule 55 (expression -> BOOLEAN .)
    GREATER         reduce using rule 55 (expression -> BOOLEAN .)
    LESSEQ          reduce using rule 55 (expression -> BOOLEAN .)
    GREATEREQ       reduce using rule 55 (expression -> BOOLEAN .)
    EQ              reduce using rule 55 (expression -> BOOLEAN .)
    NEQ             reduce using rule 55 (expression -> BOOLEAN .)
    AND             reduce using rule 55 (expression -> BOOLEAN .)
    OR              reduce using rule 55 (expression -> BOOLEAN .)
    LBRACKET        reduce using rule 55 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 55 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 55 (expression -> BOOLEAN .)
    COMMA           reduce using rule 55 (expression -> BOOLEAN .)


state 28

    (57) expression -> LBRACKET . list_elements RBRACKET
    (58) list_elements -> . expression
    (59) list_elements -> . list_elements COMMA expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    list_elements                  shift and go to state 59
    expression                     shift and go to state 60

state 29

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    FUNC            reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    INPUT           reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    NOT             reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACKET        reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RKEY            reduce using rule 2 (statement_list -> statement_list statement .)


state 30

    (12) statement -> expression SEMICOLON .

    PRINT           reduce using rule 12 (statement -> expression SEMICOLON .)
    IF              reduce using rule 12 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 12 (statement -> expression SEMICOLON .)
    FUNC            reduce using rule 12 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 12 (statement -> expression SEMICOLON .)
    INPUT           reduce using rule 12 (statement -> expression SEMICOLON .)
    ID              reduce using rule 12 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 12 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 12 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 12 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 12 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 12 (statement -> expression SEMICOLON .)
    BOOLEAN         reduce using rule 12 (statement -> expression SEMICOLON .)
    LBRACKET        reduce using rule 12 (statement -> expression SEMICOLON .)
    $end            reduce using rule 12 (statement -> expression SEMICOLON .)
    RKEY            reduce using rule 12 (statement -> expression SEMICOLON .)


state 31

    (33) expression -> expression DOT . INSERT LPAREN expression RPAREN
    (34) expression -> expression DOT . EXPLODE LPAREN expression RPAREN
    (35) expression -> expression DOT . SIZE LPAREN RPAREN
    (36) expression -> expression DOT . GET LPAREN expression RPAREN

    INSERT          shift and go to state 61
    EXPLODE         shift and go to state 62
    SIZE            shift and go to state 63
    GET             shift and go to state 64


state 32

    (37) expression -> expression PLUS . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 65

state 33

    (38) expression -> expression MINUS . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 66

state 34

    (39) expression -> expression MULT . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 67

state 35

    (40) expression -> expression DIVIDE . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 68

state 36

    (41) expression -> expression MODULE . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 69

state 37

    (42) expression -> expression LESS . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 70

state 38

    (43) expression -> expression GREATER . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 71

state 39

    (44) expression -> expression LESSEQ . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 72

state 40

    (45) expression -> expression GREATEREQ . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 73

state 41

    (46) expression -> expression EQ . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 74

state 42

    (47) expression -> expression NEQ . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 75

state 43

    (48) expression -> expression AND . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 76

state 44

    (49) expression -> expression OR . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 77

state 45

    (19) lvalue -> expression LBRACKET . expression RBRACKET
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 78

state 46

    (14) print_statement -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (15) print_arguments -> . print_arguments COMMA expression
    (16) print_arguments -> . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    print_arguments                shift and go to state 79
    expression                     shift and go to state 80

state 47

    (52) expression -> LPAREN expression . RPAREN
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 81
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 48

    (27) expression -> ID . LPAREN argument_list RPAREN
    (56) expression -> ID .

    LPAREN          shift and go to state 54
    RPAREN          reduce using rule 56 (expression -> ID .)
    DOT             reduce using rule 56 (expression -> ID .)
    PLUS            reduce using rule 56 (expression -> ID .)
    MINUS           reduce using rule 56 (expression -> ID .)
    MULT            reduce using rule 56 (expression -> ID .)
    DIVIDE          reduce using rule 56 (expression -> ID .)
    MODULE          reduce using rule 56 (expression -> ID .)
    LESS            reduce using rule 56 (expression -> ID .)
    GREATER         reduce using rule 56 (expression -> ID .)
    LESSEQ          reduce using rule 56 (expression -> ID .)
    GREATEREQ       reduce using rule 56 (expression -> ID .)
    EQ              reduce using rule 56 (expression -> ID .)
    NEQ             reduce using rule 56 (expression -> ID .)
    AND             reduce using rule 56 (expression -> ID .)
    OR              reduce using rule 56 (expression -> ID .)
    SEMICOLON       reduce using rule 56 (expression -> ID .)
    LBRACKET        reduce using rule 56 (expression -> ID .)
    RBRACKET        reduce using rule 56 (expression -> ID .)
    COMMA           reduce using rule 56 (expression -> ID .)


state 49

    (17) assign_statement -> lvalue EQUALS . expression SEMICOLON
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 82

state 50

    (22) if_statement -> IF LPAREN . expression RPAREN block
    (23) if_statement -> IF LPAREN . expression RPAREN block ELSE block
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 83

state 51

    (24) while_statement -> WHILE LPAREN . expression RPAREN block
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 84

state 52

    (25) for_statement -> FOR LPAREN . assign_statement expression SEMICOLON assign_statement RPAREN block
    (17) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 87
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    assign_statement               shift and go to state 85
    expression                     shift and go to state 86
    lvalue                         shift and go to state 15

state 53

    (26) function_definition -> FUNC ID . LPAREN parameters RPAREN block

    LPAREN          shift and go to state 88


state 54

    (27) expression -> ID LPAREN . argument_list RPAREN
    (20) argument_list -> . argument_list COMMA expression
    (21) argument_list -> . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    argument_list                  shift and go to state 89
    expression                     shift and go to state 90

state 55

    (32) return_statement -> RETURN expression . SEMICOLON
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       shift and go to state 91
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 56

    (13) input_statement -> INPUT LPAREN . lvalue RPAREN SEMICOLON
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 87
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    lvalue                         shift and go to state 92
    expression                     shift and go to state 86

state 57

    (51) expression -> MINUS expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 51 (expression -> MINUS expression .)
    DOT             reduce using rule 51 (expression -> MINUS expression .)
    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    MULT            reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    MODULE          reduce using rule 51 (expression -> MINUS expression .)
    LESS            reduce using rule 51 (expression -> MINUS expression .)
    GREATER         reduce using rule 51 (expression -> MINUS expression .)
    LESSEQ          reduce using rule 51 (expression -> MINUS expression .)
    GREATEREQ       reduce using rule 51 (expression -> MINUS expression .)
    EQ              reduce using rule 51 (expression -> MINUS expression .)
    NEQ             reduce using rule 51 (expression -> MINUS expression .)
    AND             reduce using rule 51 (expression -> MINUS expression .)
    OR              reduce using rule 51 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 51 (expression -> MINUS expression .)
    COMMA           reduce using rule 51 (expression -> MINUS expression .)

  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MODULE          [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 58

    (50) expression -> NOT expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 50 (expression -> NOT expression .)
    DOT             reduce using rule 50 (expression -> NOT expression .)
    PLUS            reduce using rule 50 (expression -> NOT expression .)
    MINUS           reduce using rule 50 (expression -> NOT expression .)
    MULT            reduce using rule 50 (expression -> NOT expression .)
    DIVIDE          reduce using rule 50 (expression -> NOT expression .)
    MODULE          reduce using rule 50 (expression -> NOT expression .)
    LESS            reduce using rule 50 (expression -> NOT expression .)
    GREATER         reduce using rule 50 (expression -> NOT expression .)
    LESSEQ          reduce using rule 50 (expression -> NOT expression .)
    GREATEREQ       reduce using rule 50 (expression -> NOT expression .)
    EQ              reduce using rule 50 (expression -> NOT expression .)
    NEQ             reduce using rule 50 (expression -> NOT expression .)
    AND             reduce using rule 50 (expression -> NOT expression .)
    OR              reduce using rule 50 (expression -> NOT expression .)
    LBRACKET        reduce using rule 50 (expression -> NOT expression .)
    RPAREN          reduce using rule 50 (expression -> NOT expression .)
    RBRACKET        reduce using rule 50 (expression -> NOT expression .)
    COMMA           reduce using rule 50 (expression -> NOT expression .)

  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MODULE          [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 59

    (57) expression -> LBRACKET list_elements . RBRACKET
    (59) list_elements -> list_elements . COMMA expression

    RBRACKET        shift and go to state 93
    COMMA           shift and go to state 94


state 60

    (58) list_elements -> expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACKET        reduce using rule 58 (list_elements -> expression .)
    COMMA           reduce using rule 58 (list_elements -> expression .)
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 61

    (33) expression -> expression DOT INSERT . LPAREN expression RPAREN

    LPAREN          shift and go to state 95


state 62

    (34) expression -> expression DOT EXPLODE . LPAREN expression RPAREN

    LPAREN          shift and go to state 96


state 63

    (35) expression -> expression DOT SIZE . LPAREN RPAREN

    LPAREN          shift and go to state 97


state 64

    (36) expression -> expression DOT GET . LPAREN expression RPAREN

    LPAREN          shift and go to state 98


state 65

    (37) expression -> expression PLUS expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 37 (expression -> expression PLUS expression .)
    DOT             reduce using rule 37 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 37 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 37 (expression -> expression PLUS expression .)
    LESS            reduce using rule 37 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 37 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 37 (expression -> expression PLUS expression .)
    GREATEREQ       reduce using rule 37 (expression -> expression PLUS expression .)
    EQ              reduce using rule 37 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 37 (expression -> expression PLUS expression .)
    AND             reduce using rule 37 (expression -> expression PLUS expression .)
    OR              reduce using rule 37 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 37 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 37 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 37 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 37 (expression -> expression PLUS expression .)
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36

  ! MULT            [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 37 (expression -> expression PLUS expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 66

    (38) expression -> expression MINUS expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 38 (expression -> expression MINUS expression .)
    DOT             reduce using rule 38 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 38 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 38 (expression -> expression MINUS expression .)
    LESS            reduce using rule 38 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 38 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 38 (expression -> expression MINUS expression .)
    GREATEREQ       reduce using rule 38 (expression -> expression MINUS expression .)
    EQ              reduce using rule 38 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 38 (expression -> expression MINUS expression .)
    AND             reduce using rule 38 (expression -> expression MINUS expression .)
    OR              reduce using rule 38 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 38 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 38 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 38 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 38 (expression -> expression MINUS expression .)
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36

  ! MULT            [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 38 (expression -> expression MINUS expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 67

    (39) expression -> expression MULT expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 39 (expression -> expression MULT expression .)
    DOT             reduce using rule 39 (expression -> expression MULT expression .)
    PLUS            reduce using rule 39 (expression -> expression MULT expression .)
    MINUS           reduce using rule 39 (expression -> expression MULT expression .)
    MULT            reduce using rule 39 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 39 (expression -> expression MULT expression .)
    MODULE          reduce using rule 39 (expression -> expression MULT expression .)
    LESS            reduce using rule 39 (expression -> expression MULT expression .)
    GREATER         reduce using rule 39 (expression -> expression MULT expression .)
    LESSEQ          reduce using rule 39 (expression -> expression MULT expression .)
    GREATEREQ       reduce using rule 39 (expression -> expression MULT expression .)
    EQ              reduce using rule 39 (expression -> expression MULT expression .)
    NEQ             reduce using rule 39 (expression -> expression MULT expression .)
    AND             reduce using rule 39 (expression -> expression MULT expression .)
    OR              reduce using rule 39 (expression -> expression MULT expression .)
    LBRACKET        reduce using rule 39 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 39 (expression -> expression MULT expression .)
    RBRACKET        reduce using rule 39 (expression -> expression MULT expression .)
    COMMA           reduce using rule 39 (expression -> expression MULT expression .)

  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MODULE          [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 68

    (40) expression -> expression DIVIDE expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 40 (expression -> expression DIVIDE expression .)
    DOT             reduce using rule 40 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 40 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 40 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 40 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 40 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 40 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 40 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 40 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 40 (expression -> expression DIVIDE expression .)
    GREATEREQ       reduce using rule 40 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 40 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 40 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 40 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 40 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 40 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 40 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 40 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 40 (expression -> expression DIVIDE expression .)

  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MODULE          [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 69

    (41) expression -> expression MODULE expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 41 (expression -> expression MODULE expression .)
    DOT             reduce using rule 41 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 41 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 41 (expression -> expression MODULE expression .)
    MULT            reduce using rule 41 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 41 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 41 (expression -> expression MODULE expression .)
    LESS            reduce using rule 41 (expression -> expression MODULE expression .)
    GREATER         reduce using rule 41 (expression -> expression MODULE expression .)
    LESSEQ          reduce using rule 41 (expression -> expression MODULE expression .)
    GREATEREQ       reduce using rule 41 (expression -> expression MODULE expression .)
    EQ              reduce using rule 41 (expression -> expression MODULE expression .)
    NEQ             reduce using rule 41 (expression -> expression MODULE expression .)
    AND             reduce using rule 41 (expression -> expression MODULE expression .)
    OR              reduce using rule 41 (expression -> expression MODULE expression .)
    LBRACKET        reduce using rule 41 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 41 (expression -> expression MODULE expression .)
    RBRACKET        reduce using rule 41 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 41 (expression -> expression MODULE expression .)

  ! DOT             [ shift and go to state 31 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 33 ]
  ! MULT            [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! MODULE          [ shift and go to state 36 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 70

    (42) expression -> expression LESS expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 42 (expression -> expression LESS expression .)
    DOT             reduce using rule 42 (expression -> expression LESS expression .)
    LESS            reduce using rule 42 (expression -> expression LESS expression .)
    GREATER         reduce using rule 42 (expression -> expression LESS expression .)
    LESSEQ          reduce using rule 42 (expression -> expression LESS expression .)
    GREATEREQ       reduce using rule 42 (expression -> expression LESS expression .)
    EQ              reduce using rule 42 (expression -> expression LESS expression .)
    NEQ             reduce using rule 42 (expression -> expression LESS expression .)
    AND             reduce using rule 42 (expression -> expression LESS expression .)
    OR              reduce using rule 42 (expression -> expression LESS expression .)
    LBRACKET        reduce using rule 42 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 42 (expression -> expression LESS expression .)
    RBRACKET        reduce using rule 42 (expression -> expression LESS expression .)
    COMMA           reduce using rule 42 (expression -> expression LESS expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36

  ! PLUS            [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! MULT            [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! MODULE          [ reduce using rule 42 (expression -> expression LESS expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 71

    (43) expression -> expression GREATER expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 43 (expression -> expression GREATER expression .)
    DOT             reduce using rule 43 (expression -> expression GREATER expression .)
    LESS            reduce using rule 43 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 43 (expression -> expression GREATER expression .)
    LESSEQ          reduce using rule 43 (expression -> expression GREATER expression .)
    GREATEREQ       reduce using rule 43 (expression -> expression GREATER expression .)
    EQ              reduce using rule 43 (expression -> expression GREATER expression .)
    NEQ             reduce using rule 43 (expression -> expression GREATER expression .)
    AND             reduce using rule 43 (expression -> expression GREATER expression .)
    OR              reduce using rule 43 (expression -> expression GREATER expression .)
    LBRACKET        reduce using rule 43 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 43 (expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 43 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 43 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36

  ! PLUS            [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MULT            [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! MODULE          [ reduce using rule 43 (expression -> expression GREATER expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 72

    (44) expression -> expression LESSEQ expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 44 (expression -> expression LESSEQ expression .)
    DOT             reduce using rule 44 (expression -> expression LESSEQ expression .)
    LESS            reduce using rule 44 (expression -> expression LESSEQ expression .)
    GREATER         reduce using rule 44 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 44 (expression -> expression LESSEQ expression .)
    GREATEREQ       reduce using rule 44 (expression -> expression LESSEQ expression .)
    EQ              reduce using rule 44 (expression -> expression LESSEQ expression .)
    NEQ             reduce using rule 44 (expression -> expression LESSEQ expression .)
    AND             reduce using rule 44 (expression -> expression LESSEQ expression .)
    OR              reduce using rule 44 (expression -> expression LESSEQ expression .)
    LBRACKET        reduce using rule 44 (expression -> expression LESSEQ expression .)
    RPAREN          reduce using rule 44 (expression -> expression LESSEQ expression .)
    RBRACKET        reduce using rule 44 (expression -> expression LESSEQ expression .)
    COMMA           reduce using rule 44 (expression -> expression LESSEQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36

  ! PLUS            [ reduce using rule 44 (expression -> expression LESSEQ expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression LESSEQ expression .) ]
  ! MULT            [ reduce using rule 44 (expression -> expression LESSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression LESSEQ expression .) ]
  ! MODULE          [ reduce using rule 44 (expression -> expression LESSEQ expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 73

    (45) expression -> expression GREATEREQ expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 45 (expression -> expression GREATEREQ expression .)
    DOT             reduce using rule 45 (expression -> expression GREATEREQ expression .)
    LESS            reduce using rule 45 (expression -> expression GREATEREQ expression .)
    GREATER         reduce using rule 45 (expression -> expression GREATEREQ expression .)
    LESSEQ          reduce using rule 45 (expression -> expression GREATEREQ expression .)
    GREATEREQ       reduce using rule 45 (expression -> expression GREATEREQ expression .)
    EQ              reduce using rule 45 (expression -> expression GREATEREQ expression .)
    NEQ             reduce using rule 45 (expression -> expression GREATEREQ expression .)
    AND             reduce using rule 45 (expression -> expression GREATEREQ expression .)
    OR              reduce using rule 45 (expression -> expression GREATEREQ expression .)
    LBRACKET        reduce using rule 45 (expression -> expression GREATEREQ expression .)
    RPAREN          reduce using rule 45 (expression -> expression GREATEREQ expression .)
    RBRACKET        reduce using rule 45 (expression -> expression GREATEREQ expression .)
    COMMA           reduce using rule 45 (expression -> expression GREATEREQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36

  ! PLUS            [ reduce using rule 45 (expression -> expression GREATEREQ expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression GREATEREQ expression .) ]
  ! MULT            [ reduce using rule 45 (expression -> expression GREATEREQ expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression GREATEREQ expression .) ]
  ! MODULE          [ reduce using rule 45 (expression -> expression GREATEREQ expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! LESS            [ shift and go to state 37 ]
  ! GREATER         [ shift and go to state 38 ]
  ! LESSEQ          [ shift and go to state 39 ]
  ! GREATEREQ       [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 74

    (46) expression -> expression EQ expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 46 (expression -> expression EQ expression .)
    DOT             reduce using rule 46 (expression -> expression EQ expression .)
    EQ              reduce using rule 46 (expression -> expression EQ expression .)
    NEQ             reduce using rule 46 (expression -> expression EQ expression .)
    AND             reduce using rule 46 (expression -> expression EQ expression .)
    OR              reduce using rule 46 (expression -> expression EQ expression .)
    LBRACKET        reduce using rule 46 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 46 (expression -> expression EQ expression .)
    COMMA           reduce using rule 46 (expression -> expression EQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40

  ! PLUS            [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! MULT            [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! MODULE          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! LESS            [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! GREATER         [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! LESSEQ          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! GREATEREQ       [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 75

    (47) expression -> expression NEQ expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 47 (expression -> expression NEQ expression .)
    DOT             reduce using rule 47 (expression -> expression NEQ expression .)
    EQ              reduce using rule 47 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 47 (expression -> expression NEQ expression .)
    AND             reduce using rule 47 (expression -> expression NEQ expression .)
    OR              reduce using rule 47 (expression -> expression NEQ expression .)
    LBRACKET        reduce using rule 47 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 47 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 47 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40

  ! PLUS            [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! MULT            [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! MODULE          [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! LESS            [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! GREATER         [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! LESSEQ          [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! GREATEREQ       [ reduce using rule 47 (expression -> expression NEQ expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 76

    (48) expression -> expression AND expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 48 (expression -> expression AND expression .)
    DOT             reduce using rule 48 (expression -> expression AND expression .)
    AND             reduce using rule 48 (expression -> expression AND expression .)
    OR              reduce using rule 48 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 48 (expression -> expression AND expression .)
    RPAREN          reduce using rule 48 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 48 (expression -> expression AND expression .)
    COMMA           reduce using rule 48 (expression -> expression AND expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42

  ! PLUS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LESSEQ          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! GREATEREQ       [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]


state 77

    (49) expression -> expression OR expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       reduce using rule 49 (expression -> expression OR expression .)
    DOT             reduce using rule 49 (expression -> expression OR expression .)
    OR              reduce using rule 49 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 49 (expression -> expression OR expression .)
    RPAREN          reduce using rule 49 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 49 (expression -> expression OR expression .)
    COMMA           reduce using rule 49 (expression -> expression OR expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43

  ! PLUS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LESSEQ          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! GREATEREQ       [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! DOT             [ shift and go to state 31 ]
  ! OR              [ shift and go to state 44 ]


state 78

    (19) lvalue -> expression LBRACKET expression . RBRACKET
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACKET        shift and go to state 99
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 79

    (14) print_statement -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (15) print_arguments -> print_arguments . COMMA expression

    RPAREN          shift and go to state 100
    COMMA           shift and go to state 101


state 80

    (16) print_arguments -> expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 16 (print_arguments -> expression .)
    COMMA           reduce using rule 16 (print_arguments -> expression .)
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 81

    (52) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 52 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 52 (expression -> LPAREN expression RPAREN .)


state 82

    (17) assign_statement -> lvalue EQUALS expression . SEMICOLON
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       shift and go to state 102
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 83

    (22) if_statement -> IF LPAREN expression . RPAREN block
    (23) if_statement -> IF LPAREN expression . RPAREN block ELSE block
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 103
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 84

    (24) while_statement -> WHILE LPAREN expression . RPAREN block
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 104
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 85

    (25) for_statement -> FOR LPAREN assign_statement . expression SEMICOLON assign_statement RPAREN block
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 105

state 86

    (19) lvalue -> expression . LBRACKET expression RBRACKET
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    LBRACKET        shift and go to state 45
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 87

    (18) lvalue -> ID .
    (27) expression -> ID . LPAREN argument_list RPAREN
    (56) expression -> ID .

    EQUALS          reduce using rule 18 (lvalue -> ID .)
    RPAREN          reduce using rule 18 (lvalue -> ID .)
    LPAREN          shift and go to state 54
    LBRACKET        reduce using rule 56 (expression -> ID .)
    DOT             reduce using rule 56 (expression -> ID .)
    PLUS            reduce using rule 56 (expression -> ID .)
    MINUS           reduce using rule 56 (expression -> ID .)
    MULT            reduce using rule 56 (expression -> ID .)
    DIVIDE          reduce using rule 56 (expression -> ID .)
    MODULE          reduce using rule 56 (expression -> ID .)
    LESS            reduce using rule 56 (expression -> ID .)
    GREATER         reduce using rule 56 (expression -> ID .)
    LESSEQ          reduce using rule 56 (expression -> ID .)
    GREATEREQ       reduce using rule 56 (expression -> ID .)
    EQ              reduce using rule 56 (expression -> ID .)
    NEQ             reduce using rule 56 (expression -> ID .)
    AND             reduce using rule 56 (expression -> ID .)
    OR              reduce using rule 56 (expression -> ID .)


state 88

    (26) function_definition -> FUNC ID LPAREN . parameters RPAREN block
    (28) parameters -> . parameters COMMA ID
    (29) parameters -> . ID
    (30) parameters -> . empty
    (60) empty -> .

    ID              shift and go to state 106
    RPAREN          reduce using rule 60 (empty -> .)
    COMMA           reduce using rule 60 (empty -> .)

    parameters                     shift and go to state 107
    empty                          shift and go to state 108

state 89

    (27) expression -> ID LPAREN argument_list . RPAREN
    (20) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 110


state 90

    (21) argument_list -> expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 21 (argument_list -> expression .)
    COMMA           reduce using rule 21 (argument_list -> expression .)
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 91

    (32) return_statement -> RETURN expression SEMICOLON .

    PRINT           reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    FUNC            reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    INPUT           reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)
    RKEY            reduce using rule 32 (return_statement -> RETURN expression SEMICOLON .)


state 92

    (13) input_statement -> INPUT LPAREN lvalue . RPAREN SEMICOLON

    RPAREN          shift and go to state 111


state 93

    (57) expression -> LBRACKET list_elements RBRACKET .

    SEMICOLON       reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    DOT             reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    PLUS            reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    MINUS           reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    MULT            reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    DIVIDE          reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    MODULE          reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    LESS            reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    GREATER         reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    LESSEQ          reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    GREATEREQ       reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    EQ              reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    NEQ             reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    AND             reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    OR              reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    LBRACKET        reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    RPAREN          reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    RBRACKET        reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)
    COMMA           reduce using rule 57 (expression -> LBRACKET list_elements RBRACKET .)


state 94

    (59) list_elements -> list_elements COMMA . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 112

state 95

    (33) expression -> expression DOT INSERT LPAREN . expression RPAREN
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 113

state 96

    (34) expression -> expression DOT EXPLODE LPAREN . expression RPAREN
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 114

state 97

    (35) expression -> expression DOT SIZE LPAREN . RPAREN

    RPAREN          shift and go to state 115


state 98

    (36) expression -> expression DOT GET LPAREN . expression RPAREN
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 116

state 99

    (19) lvalue -> expression LBRACKET expression RBRACKET .

    EQUALS          reduce using rule 19 (lvalue -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 19 (lvalue -> expression LBRACKET expression RBRACKET .)


state 100

    (14) print_statement -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 101

    (15) print_arguments -> print_arguments COMMA . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 118

state 102

    (17) assign_statement -> lvalue EQUALS expression SEMICOLON .

    PRINT           reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    IF              reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    FOR             reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    FUNC            reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    INPUT           reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    ID              reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    NOT             reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    STRING          reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    LBRACKET        reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    $end            reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    RKEY            reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    RPAREN          reduce using rule 17 (assign_statement -> lvalue EQUALS expression SEMICOLON .)


state 103

    (22) if_statement -> IF LPAREN expression RPAREN . block
    (23) if_statement -> IF LPAREN expression RPAREN . block ELSE block
    (31) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 120

    block                          shift and go to state 119

state 104

    (24) while_statement -> WHILE LPAREN expression RPAREN . block
    (31) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 120

    block                          shift and go to state 121

state 105

    (25) for_statement -> FOR LPAREN assign_statement expression . SEMICOLON assign_statement RPAREN block
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    SEMICOLON       shift and go to state 122
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 106

    (29) parameters -> ID .

    RPAREN          reduce using rule 29 (parameters -> ID .)
    COMMA           reduce using rule 29 (parameters -> ID .)


state 107

    (26) function_definition -> FUNC ID LPAREN parameters . RPAREN block
    (28) parameters -> parameters . COMMA ID

    RPAREN          shift and go to state 123
    COMMA           shift and go to state 124


state 108

    (30) parameters -> empty .

    RPAREN          reduce using rule 30 (parameters -> empty .)
    COMMA           reduce using rule 30 (parameters -> empty .)


state 109

    (27) expression -> ID LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    DOT             reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    MULT            reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    DIVIDE          reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    MODULE          reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    LESS            reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    GREATER         reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    LESSEQ          reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    GREATEREQ       reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    EQ              reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    AND             reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    OR              reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    LBRACKET        reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 27 (expression -> ID LPAREN argument_list RPAREN .)


state 110

    (20) argument_list -> argument_list COMMA . expression
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 48
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    expression                     shift and go to state 125

state 111

    (13) input_statement -> INPUT LPAREN lvalue RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 126


state 112

    (59) list_elements -> list_elements COMMA expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RBRACKET        reduce using rule 59 (list_elements -> list_elements COMMA expression .)
    COMMA           reduce using rule 59 (list_elements -> list_elements COMMA expression .)
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 113

    (33) expression -> expression DOT INSERT LPAREN expression . RPAREN
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 127
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 114

    (34) expression -> expression DOT EXPLODE LPAREN expression . RPAREN
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 128
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 115

    (35) expression -> expression DOT SIZE LPAREN RPAREN .

    SEMICOLON       reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    DOT             reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    PLUS            reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    MINUS           reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    MULT            reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    DIVIDE          reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    MODULE          reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    LESS            reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    GREATER         reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    LESSEQ          reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    GREATEREQ       reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    EQ              reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    NEQ             reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    AND             reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    OR              reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    LBRACKET        reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    RPAREN          reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    RBRACKET        reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)
    COMMA           reduce using rule 35 (expression -> expression DOT SIZE LPAREN RPAREN .)


state 116

    (36) expression -> expression DOT GET LPAREN expression . RPAREN
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          shift and go to state 129
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 117

    (14) print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    PRINT           reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    WHILE           reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FOR             reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FUNC            reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    INPUT           reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    NOT             reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    MINUS           reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    LPAREN          reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    NUMBER          reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    STRING          reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    $end            reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RKEY            reduce using rule 14 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 118

    (15) print_arguments -> print_arguments COMMA expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 15 (print_arguments -> print_arguments COMMA expression .)
    COMMA           reduce using rule 15 (print_arguments -> print_arguments COMMA expression .)
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 119

    (22) if_statement -> IF LPAREN expression RPAREN block .
    (23) if_statement -> IF LPAREN expression RPAREN block . ELSE block

    PRINT           reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    FUNC            reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    INPUT           reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    NOT             reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    STRING          reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    BOOLEAN         reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    RKEY            reduce using rule 22 (if_statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 130


state 120

    (31) block -> LKEY . statement_list RKEY
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . input_statement
    (12) statement -> . expression SEMICOLON
    (14) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (22) if_statement -> . IF LPAREN expression RPAREN block
    (23) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (24) while_statement -> . WHILE LPAREN expression RPAREN block
    (25) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (26) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (32) return_statement -> . RETURN expression SEMICOLON
    (13) input_statement -> . INPUT LPAREN lvalue RPAREN SEMICOLON
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET

    PRINT           shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    FUNC            shift and go to state 19
    RETURN          shift and go to state 21
    INPUT           shift and go to state 22
    ID              shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    statement_list                 shift and go to state 131
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    input_statement                shift and go to state 11
    expression                     shift and go to state 12
    lvalue                         shift and go to state 15

state 121

    (24) while_statement -> WHILE LPAREN expression RPAREN block .

    PRINT           reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FUNC            reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    INPUT           reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    NOT             reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    MINUS           reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    STRING          reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    BOOLEAN         reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    LBRACKET        reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)
    RKEY            reduce using rule 24 (while_statement -> WHILE LPAREN expression RPAREN block .)


state 122

    (25) for_statement -> FOR LPAREN assign_statement expression SEMICOLON . assign_statement RPAREN block
    (17) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET

    ID              shift and go to state 87
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    assign_statement               shift and go to state 132
    expression                     shift and go to state 86
    lvalue                         shift and go to state 15

state 123

    (26) function_definition -> FUNC ID LPAREN parameters RPAREN . block
    (31) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 120

    block                          shift and go to state 133

state 124

    (28) parameters -> parameters COMMA . ID

    ID              shift and go to state 134


state 125

    (20) argument_list -> argument_list COMMA expression .
    (33) expression -> expression . DOT INSERT LPAREN expression RPAREN
    (34) expression -> expression . DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> expression . DOT SIZE LPAREN RPAREN
    (36) expression -> expression . DOT GET LPAREN expression RPAREN
    (37) expression -> expression . PLUS expression
    (38) expression -> expression . MINUS expression
    (39) expression -> expression . MULT expression
    (40) expression -> expression . DIVIDE expression
    (41) expression -> expression . MODULE expression
    (42) expression -> expression . LESS expression
    (43) expression -> expression . GREATER expression
    (44) expression -> expression . LESSEQ expression
    (45) expression -> expression . GREATEREQ expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NEQ expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    RPAREN          reduce using rule 20 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 20 (argument_list -> argument_list COMMA expression .)
    DOT             shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    MULT            shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULE          shift and go to state 36
    LESS            shift and go to state 37
    GREATER         shift and go to state 38
    LESSEQ          shift and go to state 39
    GREATEREQ       shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44


state 126

    (13) input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .

    PRINT           reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    IF              reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    WHILE           reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    FOR             reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    FUNC            reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    RETURN          reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    INPUT           reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    ID              reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    NOT             reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    MINUS           reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    LPAREN          reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    NUMBER          reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    STRING          reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    $end            reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)
    RKEY            reduce using rule 13 (input_statement -> INPUT LPAREN lvalue RPAREN SEMICOLON .)


state 127

    (33) expression -> expression DOT INSERT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    DOT             reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    PLUS            reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    MINUS           reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    MULT            reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    MODULE          reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    LESS            reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    GREATER         reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    EQ              reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    NEQ             reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    AND             reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    OR              reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)
    COMMA           reduce using rule 33 (expression -> expression DOT INSERT LPAREN expression RPAREN .)


state 128

    (34) expression -> expression DOT EXPLODE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    DOT             reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    MULT            reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    MODULE          reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    LESS            reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    GREATER         reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    EQ              reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    NEQ             reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    AND             reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    OR              reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)
    COMMA           reduce using rule 34 (expression -> expression DOT EXPLODE LPAREN expression RPAREN .)


state 129

    (36) expression -> expression DOT GET LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    DOT             reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    PLUS            reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    MULT            reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    MODULE          reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    LESS            reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    GREATER         reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    EQ              reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    NEQ             reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    AND             reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    OR              reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (expression -> expression DOT GET LPAREN expression RPAREN .)


state 130

    (23) if_statement -> IF LPAREN expression RPAREN block ELSE . block
    (31) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 120

    block                          shift and go to state 135

state 131

    (31) block -> LKEY statement_list . RKEY
    (2) statement_list -> statement_list . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . input_statement
    (12) statement -> . expression SEMICOLON
    (14) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (17) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (22) if_statement -> . IF LPAREN expression RPAREN block
    (23) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (24) while_statement -> . WHILE LPAREN expression RPAREN block
    (25) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (26) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (32) return_statement -> . RETURN expression SEMICOLON
    (13) input_statement -> . INPUT LPAREN lvalue RPAREN SEMICOLON
    (27) expression -> . ID LPAREN argument_list RPAREN
    (33) expression -> . expression DOT INSERT LPAREN expression RPAREN
    (34) expression -> . expression DOT EXPLODE LPAREN expression RPAREN
    (35) expression -> . expression DOT SIZE LPAREN RPAREN
    (36) expression -> . expression DOT GET LPAREN expression RPAREN
    (37) expression -> . expression PLUS expression
    (38) expression -> . expression MINUS expression
    (39) expression -> . expression MULT expression
    (40) expression -> . expression DIVIDE expression
    (41) expression -> . expression MODULE expression
    (42) expression -> . expression LESS expression
    (43) expression -> . expression GREATER expression
    (44) expression -> . expression LESSEQ expression
    (45) expression -> . expression GREATEREQ expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NEQ expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . LPAREN expression RPAREN
    (53) expression -> . NUMBER
    (54) expression -> . STRING
    (55) expression -> . BOOLEAN
    (56) expression -> . ID
    (57) expression -> . LBRACKET list_elements RBRACKET
    (18) lvalue -> . ID
    (19) lvalue -> . expression LBRACKET expression RBRACKET

    RKEY            shift and go to state 136
    PRINT           shift and go to state 13
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    FUNC            shift and go to state 19
    RETURN          shift and go to state 21
    INPUT           shift and go to state 22
    ID              shift and go to state 20
    NOT             shift and go to state 24
    MINUS           shift and go to state 23
    LPAREN          shift and go to state 14
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    BOOLEAN         shift and go to state 27
    LBRACKET        shift and go to state 28

    statement                      shift and go to state 29
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    input_statement                shift and go to state 11
    expression                     shift and go to state 12
    lvalue                         shift and go to state 15

state 132

    (25) for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement . RPAREN block

    RPAREN          shift and go to state 137


state 133

    (26) function_definition -> FUNC ID LPAREN parameters RPAREN block .

    PRINT           reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    IF              reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    WHILE           reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    FOR             reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    FUNC            reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    RETURN          reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    INPUT           reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    ID              reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    NOT             reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    MINUS           reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    LPAREN          reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    NUMBER          reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    STRING          reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    BOOLEAN         reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    LBRACKET        reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    $end            reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    RKEY            reduce using rule 26 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)


state 134

    (28) parameters -> parameters COMMA ID .

    RPAREN          reduce using rule 28 (parameters -> parameters COMMA ID .)
    COMMA           reduce using rule 28 (parameters -> parameters COMMA ID .)


state 135

    (23) if_statement -> IF LPAREN expression RPAREN block ELSE block .

    PRINT           reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FUNC            reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    INPUT           reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    NOT             reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    BOOLEAN         reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    LBRACKET        reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RKEY            reduce using rule 23 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)


state 136

    (31) block -> LKEY statement_list RKEY .

    ELSE            reduce using rule 31 (block -> LKEY statement_list RKEY .)
    PRINT           reduce using rule 31 (block -> LKEY statement_list RKEY .)
    IF              reduce using rule 31 (block -> LKEY statement_list RKEY .)
    WHILE           reduce using rule 31 (block -> LKEY statement_list RKEY .)
    FOR             reduce using rule 31 (block -> LKEY statement_list RKEY .)
    FUNC            reduce using rule 31 (block -> LKEY statement_list RKEY .)
    RETURN          reduce using rule 31 (block -> LKEY statement_list RKEY .)
    INPUT           reduce using rule 31 (block -> LKEY statement_list RKEY .)
    ID              reduce using rule 31 (block -> LKEY statement_list RKEY .)
    NOT             reduce using rule 31 (block -> LKEY statement_list RKEY .)
    MINUS           reduce using rule 31 (block -> LKEY statement_list RKEY .)
    LPAREN          reduce using rule 31 (block -> LKEY statement_list RKEY .)
    NUMBER          reduce using rule 31 (block -> LKEY statement_list RKEY .)
    STRING          reduce using rule 31 (block -> LKEY statement_list RKEY .)
    BOOLEAN         reduce using rule 31 (block -> LKEY statement_list RKEY .)
    LBRACKET        reduce using rule 31 (block -> LKEY statement_list RKEY .)
    $end            reduce using rule 31 (block -> LKEY statement_list RKEY .)
    RKEY            reduce using rule 31 (block -> LKEY statement_list RKEY .)


state 137

    (25) for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN . block
    (31) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 120

    block                          shift and go to state 138

state 138

    (25) for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .

    PRINT           reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    IF              reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    WHILE           reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    FOR             reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    FUNC            reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    RETURN          reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    INPUT           reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    ID              reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    NOT             reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    MINUS           reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    LPAREN          reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    NUMBER          reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    STRING          reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    BOOLEAN         reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    LBRACKET        reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    $end            reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    RKEY            reduce using rule 25 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)

