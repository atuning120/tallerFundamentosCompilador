Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    INPUT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> print_statement
Rule 5     statement -> assign_statement
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> function_definition
Rule 10    statement -> return_statement
Rule 11    statement -> expression SEMICOLON
Rule 12    print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON
Rule 13    print_arguments -> print_arguments COMMA expression
Rule 14    print_arguments -> expression
Rule 15    assign_statement -> lvalue EQUALS expression SEMICOLON
Rule 16    lvalue -> ID
Rule 17    lvalue -> expression LBRACKET expression RBRACKET
Rule 18    if_statement -> IF LPAREN expression RPAREN block
Rule 19    if_statement -> IF LPAREN expression RPAREN block ELSE block
Rule 20    while_statement -> WHILE LPAREN expression RPAREN block
Rule 21    for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
Rule 22    function_definition -> FUNC ID LPAREN parameters RPAREN block
Rule 23    parameters -> parameters COMMA ID
Rule 24    parameters -> ID
Rule 25    parameters -> empty
Rule 26    block -> LKEY statement_list RKEY
Rule 27    return_statement -> RETURN expression SEMICOLON
Rule 28    expression -> expression PLUS expression
Rule 29    expression -> expression MINUS expression
Rule 30    expression -> expression MULT expression
Rule 31    expression -> expression DIVIDE expression
Rule 32    expression -> expression MODULE expression
Rule 33    expression -> expression LESS expression
Rule 34    expression -> expression GREATER expression
Rule 35    expression -> expression LESSEQ expression
Rule 36    expression -> expression GREATEREQ expression
Rule 37    expression -> expression EQ expression
Rule 38    expression -> expression NEQ expression
Rule 39    expression -> expression AND expression
Rule 40    expression -> expression OR expression
Rule 41    expression -> NOT expression
Rule 42    expression -> MINUS expression
Rule 43    expression -> LPAREN expression RPAREN
Rule 44    expression -> NUMBER
Rule 45    expression -> STRING
Rule 46    expression -> CHAR
Rule 47    expression -> BOOLEAN
Rule 48    expression -> ID
Rule 49    empty -> <empty>

Terminals, with rules where they appear

AND                  : 39
BOOLEAN              : 47
CHAR                 : 46
COMMA                : 13 23
DIVIDE               : 31
ELSE                 : 19
EQ                   : 37
EQUALS               : 15
FOR                  : 21
FUNC                 : 22
GREATER              : 34
GREATEREQ            : 36
ID                   : 16 22 23 24 48
IF                   : 18 19
INPUT                : 
LBRACKET             : 17
LESS                 : 33
LESSEQ               : 35
LKEY                 : 26
LPAREN               : 12 18 19 20 21 22 43
MINUS                : 29 42
MODULE               : 32
MULT                 : 30
NEQ                  : 38
NOT                  : 41
NUMBER               : 44
OR                   : 40
PLUS                 : 28
PRINT                : 12
RBRACKET             : 17
RETURN               : 27
RKEY                 : 26
RPAREN               : 12 18 19 20 21 22 43
SEMICOLON            : 11 12 15 21 27
STRING               : 45
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

assign_statement     : 5 21 21
block                : 18 19 19 20 21 22
empty                : 25
expression           : 11 13 14 15 17 17 18 19 20 21 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 42 43
for_statement        : 8
function_definition  : 9
if_statement         : 6
lvalue               : 15
parameters           : 22 23
print_arguments      : 12 13
print_statement      : 4
program              : 0
return_statement     : 10
statement            : 2 3
statement_list       : 1 2 26
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . expression SEMICOLON
    (12) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (15) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (18) if_statement -> . IF LPAREN expression RPAREN block
    (19) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (20) while_statement -> . WHILE LPAREN expression RPAREN block
    (21) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (22) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (27) return_statement -> . RETURN expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID
    (16) lvalue -> . ID
    (17) lvalue -> . expression LBRACKET expression RBRACKET

    PRINT           shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUNC            shift and go to state 18
    RETURN          shift and go to state 20
    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 19

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 11
    lvalue                         shift and go to state 14

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . expression SEMICOLON
    (12) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (15) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (18) if_statement -> . IF LPAREN expression RPAREN block
    (19) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (20) while_statement -> . WHILE LPAREN expression RPAREN block
    (21) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (22) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (27) return_statement -> . RETURN expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID
    (16) lvalue -> . ID
    (17) lvalue -> . expression LBRACKET expression RBRACKET

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUNC            shift and go to state 18
    RETURN          shift and go to state 20
    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 19

    statement                      shift and go to state 27
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 11
    lvalue                         shift and go to state 14

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    FUNC            reduce using rule 3 (statement_list -> statement .)
    RETURN          reduce using rule 3 (statement_list -> statement .)
    NOT             reduce using rule 3 (statement_list -> statement .)
    MINUS           reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    CHAR            reduce using rule 3 (statement_list -> statement .)
    BOOLEAN         reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RKEY            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> print_statement .

    PRINT           reduce using rule 4 (statement -> print_statement .)
    IF              reduce using rule 4 (statement -> print_statement .)
    WHILE           reduce using rule 4 (statement -> print_statement .)
    FOR             reduce using rule 4 (statement -> print_statement .)
    FUNC            reduce using rule 4 (statement -> print_statement .)
    RETURN          reduce using rule 4 (statement -> print_statement .)
    NOT             reduce using rule 4 (statement -> print_statement .)
    MINUS           reduce using rule 4 (statement -> print_statement .)
    LPAREN          reduce using rule 4 (statement -> print_statement .)
    NUMBER          reduce using rule 4 (statement -> print_statement .)
    STRING          reduce using rule 4 (statement -> print_statement .)
    CHAR            reduce using rule 4 (statement -> print_statement .)
    BOOLEAN         reduce using rule 4 (statement -> print_statement .)
    ID              reduce using rule 4 (statement -> print_statement .)
    $end            reduce using rule 4 (statement -> print_statement .)
    RKEY            reduce using rule 4 (statement -> print_statement .)


state 5

    (5) statement -> assign_statement .

    PRINT           reduce using rule 5 (statement -> assign_statement .)
    IF              reduce using rule 5 (statement -> assign_statement .)
    WHILE           reduce using rule 5 (statement -> assign_statement .)
    FOR             reduce using rule 5 (statement -> assign_statement .)
    FUNC            reduce using rule 5 (statement -> assign_statement .)
    RETURN          reduce using rule 5 (statement -> assign_statement .)
    NOT             reduce using rule 5 (statement -> assign_statement .)
    MINUS           reduce using rule 5 (statement -> assign_statement .)
    LPAREN          reduce using rule 5 (statement -> assign_statement .)
    NUMBER          reduce using rule 5 (statement -> assign_statement .)
    STRING          reduce using rule 5 (statement -> assign_statement .)
    CHAR            reduce using rule 5 (statement -> assign_statement .)
    BOOLEAN         reduce using rule 5 (statement -> assign_statement .)
    ID              reduce using rule 5 (statement -> assign_statement .)
    $end            reduce using rule 5 (statement -> assign_statement .)
    RKEY            reduce using rule 5 (statement -> assign_statement .)


state 6

    (6) statement -> if_statement .

    PRINT           reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    FUNC            reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    NOT             reduce using rule 6 (statement -> if_statement .)
    MINUS           reduce using rule 6 (statement -> if_statement .)
    LPAREN          reduce using rule 6 (statement -> if_statement .)
    NUMBER          reduce using rule 6 (statement -> if_statement .)
    STRING          reduce using rule 6 (statement -> if_statement .)
    CHAR            reduce using rule 6 (statement -> if_statement .)
    BOOLEAN         reduce using rule 6 (statement -> if_statement .)
    ID              reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RKEY            reduce using rule 6 (statement -> if_statement .)


state 7

    (7) statement -> while_statement .

    PRINT           reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    FUNC            reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    NOT             reduce using rule 7 (statement -> while_statement .)
    MINUS           reduce using rule 7 (statement -> while_statement .)
    LPAREN          reduce using rule 7 (statement -> while_statement .)
    NUMBER          reduce using rule 7 (statement -> while_statement .)
    STRING          reduce using rule 7 (statement -> while_statement .)
    CHAR            reduce using rule 7 (statement -> while_statement .)
    BOOLEAN         reduce using rule 7 (statement -> while_statement .)
    ID              reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RKEY            reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> for_statement .

    PRINT           reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    FUNC            reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    NOT             reduce using rule 8 (statement -> for_statement .)
    MINUS           reduce using rule 8 (statement -> for_statement .)
    LPAREN          reduce using rule 8 (statement -> for_statement .)
    NUMBER          reduce using rule 8 (statement -> for_statement .)
    STRING          reduce using rule 8 (statement -> for_statement .)
    CHAR            reduce using rule 8 (statement -> for_statement .)
    BOOLEAN         reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    RKEY            reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> function_definition .

    PRINT           reduce using rule 9 (statement -> function_definition .)
    IF              reduce using rule 9 (statement -> function_definition .)
    WHILE           reduce using rule 9 (statement -> function_definition .)
    FOR             reduce using rule 9 (statement -> function_definition .)
    FUNC            reduce using rule 9 (statement -> function_definition .)
    RETURN          reduce using rule 9 (statement -> function_definition .)
    NOT             reduce using rule 9 (statement -> function_definition .)
    MINUS           reduce using rule 9 (statement -> function_definition .)
    LPAREN          reduce using rule 9 (statement -> function_definition .)
    NUMBER          reduce using rule 9 (statement -> function_definition .)
    STRING          reduce using rule 9 (statement -> function_definition .)
    CHAR            reduce using rule 9 (statement -> function_definition .)
    BOOLEAN         reduce using rule 9 (statement -> function_definition .)
    ID              reduce using rule 9 (statement -> function_definition .)
    $end            reduce using rule 9 (statement -> function_definition .)
    RKEY            reduce using rule 9 (statement -> function_definition .)


state 10

    (10) statement -> return_statement .

    PRINT           reduce using rule 10 (statement -> return_statement .)
    IF              reduce using rule 10 (statement -> return_statement .)
    WHILE           reduce using rule 10 (statement -> return_statement .)
    FOR             reduce using rule 10 (statement -> return_statement .)
    FUNC            reduce using rule 10 (statement -> return_statement .)
    RETURN          reduce using rule 10 (statement -> return_statement .)
    NOT             reduce using rule 10 (statement -> return_statement .)
    MINUS           reduce using rule 10 (statement -> return_statement .)
    LPAREN          reduce using rule 10 (statement -> return_statement .)
    NUMBER          reduce using rule 10 (statement -> return_statement .)
    STRING          reduce using rule 10 (statement -> return_statement .)
    CHAR            reduce using rule 10 (statement -> return_statement .)
    BOOLEAN         reduce using rule 10 (statement -> return_statement .)
    ID              reduce using rule 10 (statement -> return_statement .)
    $end            reduce using rule 10 (statement -> return_statement .)
    RKEY            reduce using rule 10 (statement -> return_statement .)


state 11

    (11) statement -> expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression
    (17) lvalue -> expression . LBRACKET expression RBRACKET

    SEMICOLON       shift and go to state 28
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41
    LBRACKET        shift and go to state 42


state 12

    (12) print_statement -> PRINT . LPAREN print_arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 43


state 13

    (43) expression -> LPAREN . expression RPAREN
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 44

state 14

    (15) assign_statement -> lvalue . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 46


state 15

    (18) if_statement -> IF . LPAREN expression RPAREN block
    (19) if_statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 47


state 16

    (20) while_statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 48


state 17

    (21) for_statement -> FOR . LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block

    LPAREN          shift and go to state 49


state 18

    (22) function_definition -> FUNC . ID LPAREN parameters RPAREN block

    ID              shift and go to state 50


state 19

    (48) expression -> ID .
    (16) lvalue -> ID .

    SEMICOLON       reduce using rule 48 (expression -> ID .)
    PLUS            reduce using rule 48 (expression -> ID .)
    MINUS           reduce using rule 48 (expression -> ID .)
    MULT            reduce using rule 48 (expression -> ID .)
    DIVIDE          reduce using rule 48 (expression -> ID .)
    MODULE          reduce using rule 48 (expression -> ID .)
    LESS            reduce using rule 48 (expression -> ID .)
    GREATER         reduce using rule 48 (expression -> ID .)
    LESSEQ          reduce using rule 48 (expression -> ID .)
    GREATEREQ       reduce using rule 48 (expression -> ID .)
    EQ              reduce using rule 48 (expression -> ID .)
    NEQ             reduce using rule 48 (expression -> ID .)
    AND             reduce using rule 48 (expression -> ID .)
    OR              reduce using rule 48 (expression -> ID .)
    LBRACKET        reduce using rule 48 (expression -> ID .)
    EQUALS          reduce using rule 16 (lvalue -> ID .)


state 20

    (27) return_statement -> RETURN . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 51

state 21

    (42) expression -> MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 52

state 22

    (41) expression -> NOT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 53

state 23

    (44) expression -> NUMBER .

    SEMICOLON       reduce using rule 44 (expression -> NUMBER .)
    PLUS            reduce using rule 44 (expression -> NUMBER .)
    MINUS           reduce using rule 44 (expression -> NUMBER .)
    MULT            reduce using rule 44 (expression -> NUMBER .)
    DIVIDE          reduce using rule 44 (expression -> NUMBER .)
    MODULE          reduce using rule 44 (expression -> NUMBER .)
    LESS            reduce using rule 44 (expression -> NUMBER .)
    GREATER         reduce using rule 44 (expression -> NUMBER .)
    LESSEQ          reduce using rule 44 (expression -> NUMBER .)
    GREATEREQ       reduce using rule 44 (expression -> NUMBER .)
    EQ              reduce using rule 44 (expression -> NUMBER .)
    NEQ             reduce using rule 44 (expression -> NUMBER .)
    AND             reduce using rule 44 (expression -> NUMBER .)
    OR              reduce using rule 44 (expression -> NUMBER .)
    LBRACKET        reduce using rule 44 (expression -> NUMBER .)
    RPAREN          reduce using rule 44 (expression -> NUMBER .)
    RBRACKET        reduce using rule 44 (expression -> NUMBER .)
    COMMA           reduce using rule 44 (expression -> NUMBER .)


state 24

    (45) expression -> STRING .

    SEMICOLON       reduce using rule 45 (expression -> STRING .)
    PLUS            reduce using rule 45 (expression -> STRING .)
    MINUS           reduce using rule 45 (expression -> STRING .)
    MULT            reduce using rule 45 (expression -> STRING .)
    DIVIDE          reduce using rule 45 (expression -> STRING .)
    MODULE          reduce using rule 45 (expression -> STRING .)
    LESS            reduce using rule 45 (expression -> STRING .)
    GREATER         reduce using rule 45 (expression -> STRING .)
    LESSEQ          reduce using rule 45 (expression -> STRING .)
    GREATEREQ       reduce using rule 45 (expression -> STRING .)
    EQ              reduce using rule 45 (expression -> STRING .)
    NEQ             reduce using rule 45 (expression -> STRING .)
    AND             reduce using rule 45 (expression -> STRING .)
    OR              reduce using rule 45 (expression -> STRING .)
    LBRACKET        reduce using rule 45 (expression -> STRING .)
    RPAREN          reduce using rule 45 (expression -> STRING .)
    RBRACKET        reduce using rule 45 (expression -> STRING .)
    COMMA           reduce using rule 45 (expression -> STRING .)


state 25

    (46) expression -> CHAR .

    SEMICOLON       reduce using rule 46 (expression -> CHAR .)
    PLUS            reduce using rule 46 (expression -> CHAR .)
    MINUS           reduce using rule 46 (expression -> CHAR .)
    MULT            reduce using rule 46 (expression -> CHAR .)
    DIVIDE          reduce using rule 46 (expression -> CHAR .)
    MODULE          reduce using rule 46 (expression -> CHAR .)
    LESS            reduce using rule 46 (expression -> CHAR .)
    GREATER         reduce using rule 46 (expression -> CHAR .)
    LESSEQ          reduce using rule 46 (expression -> CHAR .)
    GREATEREQ       reduce using rule 46 (expression -> CHAR .)
    EQ              reduce using rule 46 (expression -> CHAR .)
    NEQ             reduce using rule 46 (expression -> CHAR .)
    AND             reduce using rule 46 (expression -> CHAR .)
    OR              reduce using rule 46 (expression -> CHAR .)
    LBRACKET        reduce using rule 46 (expression -> CHAR .)
    RPAREN          reduce using rule 46 (expression -> CHAR .)
    RBRACKET        reduce using rule 46 (expression -> CHAR .)
    COMMA           reduce using rule 46 (expression -> CHAR .)


state 26

    (47) expression -> BOOLEAN .

    SEMICOLON       reduce using rule 47 (expression -> BOOLEAN .)
    PLUS            reduce using rule 47 (expression -> BOOLEAN .)
    MINUS           reduce using rule 47 (expression -> BOOLEAN .)
    MULT            reduce using rule 47 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 47 (expression -> BOOLEAN .)
    MODULE          reduce using rule 47 (expression -> BOOLEAN .)
    LESS            reduce using rule 47 (expression -> BOOLEAN .)
    GREATER         reduce using rule 47 (expression -> BOOLEAN .)
    LESSEQ          reduce using rule 47 (expression -> BOOLEAN .)
    GREATEREQ       reduce using rule 47 (expression -> BOOLEAN .)
    EQ              reduce using rule 47 (expression -> BOOLEAN .)
    NEQ             reduce using rule 47 (expression -> BOOLEAN .)
    AND             reduce using rule 47 (expression -> BOOLEAN .)
    OR              reduce using rule 47 (expression -> BOOLEAN .)
    LBRACKET        reduce using rule 47 (expression -> BOOLEAN .)
    RPAREN          reduce using rule 47 (expression -> BOOLEAN .)
    RBRACKET        reduce using rule 47 (expression -> BOOLEAN .)
    COMMA           reduce using rule 47 (expression -> BOOLEAN .)


state 27

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    FUNC            reduce using rule 2 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 2 (statement_list -> statement_list statement .)
    NOT             reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 2 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RKEY            reduce using rule 2 (statement_list -> statement_list statement .)


state 28

    (11) statement -> expression SEMICOLON .

    PRINT           reduce using rule 11 (statement -> expression SEMICOLON .)
    IF              reduce using rule 11 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> expression SEMICOLON .)
    FOR             reduce using rule 11 (statement -> expression SEMICOLON .)
    FUNC            reduce using rule 11 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 11 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 11 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 11 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 11 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 11 (statement -> expression SEMICOLON .)
    STRING          reduce using rule 11 (statement -> expression SEMICOLON .)
    CHAR            reduce using rule 11 (statement -> expression SEMICOLON .)
    BOOLEAN         reduce using rule 11 (statement -> expression SEMICOLON .)
    ID              reduce using rule 11 (statement -> expression SEMICOLON .)
    $end            reduce using rule 11 (statement -> expression SEMICOLON .)
    RKEY            reduce using rule 11 (statement -> expression SEMICOLON .)


state 29

    (28) expression -> expression PLUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 54

state 30

    (29) expression -> expression MINUS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 55

state 31

    (30) expression -> expression MULT . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 56

state 32

    (31) expression -> expression DIVIDE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 57

state 33

    (32) expression -> expression MODULE . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 58

state 34

    (33) expression -> expression LESS . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 59

state 35

    (34) expression -> expression GREATER . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 60

state 36

    (35) expression -> expression LESSEQ . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 61

state 37

    (36) expression -> expression GREATEREQ . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 62

state 38

    (37) expression -> expression EQ . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 63

state 39

    (38) expression -> expression NEQ . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 64

state 40

    (39) expression -> expression AND . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 65

state 41

    (40) expression -> expression OR . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 66

state 42

    (17) lvalue -> expression LBRACKET . expression RBRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 67

state 43

    (12) print_statement -> PRINT LPAREN . print_arguments RPAREN SEMICOLON
    (13) print_arguments -> . print_arguments COMMA expression
    (14) print_arguments -> . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    print_arguments                shift and go to state 68
    expression                     shift and go to state 69

state 44

    (43) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    RPAREN          shift and go to state 70
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 45

    (48) expression -> ID .

    RPAREN          reduce using rule 48 (expression -> ID .)
    PLUS            reduce using rule 48 (expression -> ID .)
    MINUS           reduce using rule 48 (expression -> ID .)
    MULT            reduce using rule 48 (expression -> ID .)
    DIVIDE          reduce using rule 48 (expression -> ID .)
    MODULE          reduce using rule 48 (expression -> ID .)
    LESS            reduce using rule 48 (expression -> ID .)
    GREATER         reduce using rule 48 (expression -> ID .)
    LESSEQ          reduce using rule 48 (expression -> ID .)
    GREATEREQ       reduce using rule 48 (expression -> ID .)
    EQ              reduce using rule 48 (expression -> ID .)
    NEQ             reduce using rule 48 (expression -> ID .)
    AND             reduce using rule 48 (expression -> ID .)
    OR              reduce using rule 48 (expression -> ID .)
    SEMICOLON       reduce using rule 48 (expression -> ID .)
    LBRACKET        reduce using rule 48 (expression -> ID .)
    RBRACKET        reduce using rule 48 (expression -> ID .)
    COMMA           reduce using rule 48 (expression -> ID .)


state 46

    (15) assign_statement -> lvalue EQUALS . expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 71

state 47

    (18) if_statement -> IF LPAREN . expression RPAREN block
    (19) if_statement -> IF LPAREN . expression RPAREN block ELSE block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 72

state 48

    (20) while_statement -> WHILE LPAREN . expression RPAREN block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 73

state 49

    (21) for_statement -> FOR LPAREN . assign_statement expression SEMICOLON assign_statement RPAREN block
    (15) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (16) lvalue -> . ID
    (17) lvalue -> . expression LBRACKET expression RBRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    ID              shift and go to state 76
    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    assign_statement               shift and go to state 74
    expression                     shift and go to state 75
    lvalue                         shift and go to state 14

state 50

    (22) function_definition -> FUNC ID . LPAREN parameters RPAREN block

    LPAREN          shift and go to state 77


state 51

    (27) return_statement -> RETURN expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       shift and go to state 78
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 52

    (42) expression -> MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 42 (expression -> MINUS expression .)
    PLUS            reduce using rule 42 (expression -> MINUS expression .)
    MINUS           reduce using rule 42 (expression -> MINUS expression .)
    MULT            reduce using rule 42 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 42 (expression -> MINUS expression .)
    MODULE          reduce using rule 42 (expression -> MINUS expression .)
    LESS            reduce using rule 42 (expression -> MINUS expression .)
    GREATER         reduce using rule 42 (expression -> MINUS expression .)
    LESSEQ          reduce using rule 42 (expression -> MINUS expression .)
    GREATEREQ       reduce using rule 42 (expression -> MINUS expression .)
    EQ              reduce using rule 42 (expression -> MINUS expression .)
    NEQ             reduce using rule 42 (expression -> MINUS expression .)
    AND             reduce using rule 42 (expression -> MINUS expression .)
    OR              reduce using rule 42 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 42 (expression -> MINUS expression .)
    RPAREN          reduce using rule 42 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 42 (expression -> MINUS expression .)
    COMMA           reduce using rule 42 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! MODULE          [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 53

    (41) expression -> NOT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 41 (expression -> NOT expression .)
    PLUS            reduce using rule 41 (expression -> NOT expression .)
    MINUS           reduce using rule 41 (expression -> NOT expression .)
    MULT            reduce using rule 41 (expression -> NOT expression .)
    DIVIDE          reduce using rule 41 (expression -> NOT expression .)
    MODULE          reduce using rule 41 (expression -> NOT expression .)
    LESS            reduce using rule 41 (expression -> NOT expression .)
    GREATER         reduce using rule 41 (expression -> NOT expression .)
    LESSEQ          reduce using rule 41 (expression -> NOT expression .)
    GREATEREQ       reduce using rule 41 (expression -> NOT expression .)
    EQ              reduce using rule 41 (expression -> NOT expression .)
    NEQ             reduce using rule 41 (expression -> NOT expression .)
    AND             reduce using rule 41 (expression -> NOT expression .)
    OR              reduce using rule 41 (expression -> NOT expression .)
    LBRACKET        reduce using rule 41 (expression -> NOT expression .)
    RPAREN          reduce using rule 41 (expression -> NOT expression .)
    RBRACKET        reduce using rule 41 (expression -> NOT expression .)
    COMMA           reduce using rule 41 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! MODULE          [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 54

    (28) expression -> expression PLUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 28 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 28 (expression -> expression PLUS expression .)
    LESS            reduce using rule 28 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 28 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 28 (expression -> expression PLUS expression .)
    GREATEREQ       reduce using rule 28 (expression -> expression PLUS expression .)
    EQ              reduce using rule 28 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 28 (expression -> expression PLUS expression .)
    AND             reduce using rule 28 (expression -> expression PLUS expression .)
    OR              reduce using rule 28 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 28 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 28 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 28 (expression -> expression PLUS expression .)
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33

  ! MULT            [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 28 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 55

    (29) expression -> expression MINUS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 29 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 29 (expression -> expression MINUS expression .)
    LESS            reduce using rule 29 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 29 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 29 (expression -> expression MINUS expression .)
    GREATEREQ       reduce using rule 29 (expression -> expression MINUS expression .)
    EQ              reduce using rule 29 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 29 (expression -> expression MINUS expression .)
    AND             reduce using rule 29 (expression -> expression MINUS expression .)
    OR              reduce using rule 29 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 29 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 29 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 29 (expression -> expression MINUS expression .)
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33

  ! MULT            [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 29 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 56

    (30) expression -> expression MULT expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 30 (expression -> expression MULT expression .)
    PLUS            reduce using rule 30 (expression -> expression MULT expression .)
    MINUS           reduce using rule 30 (expression -> expression MULT expression .)
    MULT            reduce using rule 30 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 30 (expression -> expression MULT expression .)
    MODULE          reduce using rule 30 (expression -> expression MULT expression .)
    LESS            reduce using rule 30 (expression -> expression MULT expression .)
    GREATER         reduce using rule 30 (expression -> expression MULT expression .)
    LESSEQ          reduce using rule 30 (expression -> expression MULT expression .)
    GREATEREQ       reduce using rule 30 (expression -> expression MULT expression .)
    EQ              reduce using rule 30 (expression -> expression MULT expression .)
    NEQ             reduce using rule 30 (expression -> expression MULT expression .)
    AND             reduce using rule 30 (expression -> expression MULT expression .)
    OR              reduce using rule 30 (expression -> expression MULT expression .)
    LBRACKET        reduce using rule 30 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 30 (expression -> expression MULT expression .)
    RBRACKET        reduce using rule 30 (expression -> expression MULT expression .)
    COMMA           reduce using rule 30 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! MODULE          [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 57

    (31) expression -> expression DIVIDE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 31 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 31 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 31 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 31 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 31 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 31 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 31 (expression -> expression DIVIDE expression .)
    GREATEREQ       reduce using rule 31 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 31 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 31 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 31 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 31 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 31 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 31 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 31 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 31 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! MODULE          [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 58

    (32) expression -> expression MODULE expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 32 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 32 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 32 (expression -> expression MODULE expression .)
    MULT            reduce using rule 32 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 32 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 32 (expression -> expression MODULE expression .)
    LESS            reduce using rule 32 (expression -> expression MODULE expression .)
    GREATER         reduce using rule 32 (expression -> expression MODULE expression .)
    LESSEQ          reduce using rule 32 (expression -> expression MODULE expression .)
    GREATEREQ       reduce using rule 32 (expression -> expression MODULE expression .)
    EQ              reduce using rule 32 (expression -> expression MODULE expression .)
    NEQ             reduce using rule 32 (expression -> expression MODULE expression .)
    AND             reduce using rule 32 (expression -> expression MODULE expression .)
    OR              reduce using rule 32 (expression -> expression MODULE expression .)
    LBRACKET        reduce using rule 32 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 32 (expression -> expression MODULE expression .)
    RBRACKET        reduce using rule 32 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 32 (expression -> expression MODULE expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! MODULE          [ shift and go to state 33 ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 59

    (33) expression -> expression LESS expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 33 (expression -> expression LESS expression .)
    LESS            reduce using rule 33 (expression -> expression LESS expression .)
    GREATER         reduce using rule 33 (expression -> expression LESS expression .)
    LESSEQ          reduce using rule 33 (expression -> expression LESS expression .)
    GREATEREQ       reduce using rule 33 (expression -> expression LESS expression .)
    EQ              reduce using rule 33 (expression -> expression LESS expression .)
    NEQ             reduce using rule 33 (expression -> expression LESS expression .)
    AND             reduce using rule 33 (expression -> expression LESS expression .)
    OR              reduce using rule 33 (expression -> expression LESS expression .)
    LBRACKET        reduce using rule 33 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 33 (expression -> expression LESS expression .)
    RBRACKET        reduce using rule 33 (expression -> expression LESS expression .)
    COMMA           reduce using rule 33 (expression -> expression LESS expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33

  ! PLUS            [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! MULT            [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! MODULE          [ reduce using rule 33 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 60

    (34) expression -> expression GREATER expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 34 (expression -> expression GREATER expression .)
    LESS            reduce using rule 34 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 34 (expression -> expression GREATER expression .)
    LESSEQ          reduce using rule 34 (expression -> expression GREATER expression .)
    GREATEREQ       reduce using rule 34 (expression -> expression GREATER expression .)
    EQ              reduce using rule 34 (expression -> expression GREATER expression .)
    NEQ             reduce using rule 34 (expression -> expression GREATER expression .)
    AND             reduce using rule 34 (expression -> expression GREATER expression .)
    OR              reduce using rule 34 (expression -> expression GREATER expression .)
    LBRACKET        reduce using rule 34 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 34 (expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 34 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 34 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33

  ! PLUS            [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! MULT            [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! MODULE          [ reduce using rule 34 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 61

    (35) expression -> expression LESSEQ expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 35 (expression -> expression LESSEQ expression .)
    LESS            reduce using rule 35 (expression -> expression LESSEQ expression .)
    GREATER         reduce using rule 35 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 35 (expression -> expression LESSEQ expression .)
    GREATEREQ       reduce using rule 35 (expression -> expression LESSEQ expression .)
    EQ              reduce using rule 35 (expression -> expression LESSEQ expression .)
    NEQ             reduce using rule 35 (expression -> expression LESSEQ expression .)
    AND             reduce using rule 35 (expression -> expression LESSEQ expression .)
    OR              reduce using rule 35 (expression -> expression LESSEQ expression .)
    LBRACKET        reduce using rule 35 (expression -> expression LESSEQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression LESSEQ expression .)
    RBRACKET        reduce using rule 35 (expression -> expression LESSEQ expression .)
    COMMA           reduce using rule 35 (expression -> expression LESSEQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33

  ! PLUS            [ reduce using rule 35 (expression -> expression LESSEQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression LESSEQ expression .) ]
  ! MULT            [ reduce using rule 35 (expression -> expression LESSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression LESSEQ expression .) ]
  ! MODULE          [ reduce using rule 35 (expression -> expression LESSEQ expression .) ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 62

    (36) expression -> expression GREATEREQ expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 36 (expression -> expression GREATEREQ expression .)
    LESS            reduce using rule 36 (expression -> expression GREATEREQ expression .)
    GREATER         reduce using rule 36 (expression -> expression GREATEREQ expression .)
    LESSEQ          reduce using rule 36 (expression -> expression GREATEREQ expression .)
    GREATEREQ       reduce using rule 36 (expression -> expression GREATEREQ expression .)
    EQ              reduce using rule 36 (expression -> expression GREATEREQ expression .)
    NEQ             reduce using rule 36 (expression -> expression GREATEREQ expression .)
    AND             reduce using rule 36 (expression -> expression GREATEREQ expression .)
    OR              reduce using rule 36 (expression -> expression GREATEREQ expression .)
    LBRACKET        reduce using rule 36 (expression -> expression GREATEREQ expression .)
    RPAREN          reduce using rule 36 (expression -> expression GREATEREQ expression .)
    RBRACKET        reduce using rule 36 (expression -> expression GREATEREQ expression .)
    COMMA           reduce using rule 36 (expression -> expression GREATEREQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33

  ! PLUS            [ reduce using rule 36 (expression -> expression GREATEREQ expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression GREATEREQ expression .) ]
  ! MULT            [ reduce using rule 36 (expression -> expression GREATEREQ expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression GREATEREQ expression .) ]
  ! MODULE          [ reduce using rule 36 (expression -> expression GREATEREQ expression .) ]
  ! LESS            [ shift and go to state 34 ]
  ! GREATER         [ shift and go to state 35 ]
  ! LESSEQ          [ shift and go to state 36 ]
  ! GREATEREQ       [ shift and go to state 37 ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 63

    (37) expression -> expression EQ expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 37 (expression -> expression EQ expression .)
    EQ              reduce using rule 37 (expression -> expression EQ expression .)
    NEQ             reduce using rule 37 (expression -> expression EQ expression .)
    AND             reduce using rule 37 (expression -> expression EQ expression .)
    OR              reduce using rule 37 (expression -> expression EQ expression .)
    LBRACKET        reduce using rule 37 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 37 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 37 (expression -> expression EQ expression .)
    COMMA           reduce using rule 37 (expression -> expression EQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37

  ! PLUS            [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MULT            [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! MODULE          [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! LESS            [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! GREATER         [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! LESSEQ          [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! GREATEREQ       [ reduce using rule 37 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 64

    (38) expression -> expression NEQ expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 38 (expression -> expression NEQ expression .)
    EQ              reduce using rule 38 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 38 (expression -> expression NEQ expression .)
    AND             reduce using rule 38 (expression -> expression NEQ expression .)
    OR              reduce using rule 38 (expression -> expression NEQ expression .)
    LBRACKET        reduce using rule 38 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 38 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 38 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 38 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37

  ! PLUS            [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! MULT            [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! MODULE          [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! LESS            [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! GREATER         [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! LESSEQ          [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! GREATEREQ       [ reduce using rule 38 (expression -> expression NEQ expression .) ]
  ! EQ              [ shift and go to state 38 ]
  ! NEQ             [ shift and go to state 39 ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 65

    (39) expression -> expression AND expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 39 (expression -> expression AND expression .)
    AND             reduce using rule 39 (expression -> expression AND expression .)
    OR              reduce using rule 39 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 39 (expression -> expression AND expression .)
    RPAREN          reduce using rule 39 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 39 (expression -> expression AND expression .)
    COMMA           reduce using rule 39 (expression -> expression AND expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39

  ! PLUS            [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! LESSEQ          [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! GREATEREQ       [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 40 ]
  ! OR              [ shift and go to state 41 ]


state 66

    (40) expression -> expression OR expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       reduce using rule 40 (expression -> expression OR expression .)
    OR              reduce using rule 40 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 40 (expression -> expression OR expression .)
    RPAREN          reduce using rule 40 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 40 (expression -> expression OR expression .)
    COMMA           reduce using rule 40 (expression -> expression OR expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40

  ! PLUS            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LESSEQ          [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GREATEREQ       [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 41 ]


state 67

    (17) lvalue -> expression LBRACKET expression . RBRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    RBRACKET        shift and go to state 79
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 68

    (12) print_statement -> PRINT LPAREN print_arguments . RPAREN SEMICOLON
    (13) print_arguments -> print_arguments . COMMA expression

    RPAREN          shift and go to state 80
    COMMA           shift and go to state 81


state 69

    (14) print_arguments -> expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    RPAREN          reduce using rule 14 (print_arguments -> expression .)
    COMMA           reduce using rule 14 (print_arguments -> expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 70

    (43) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 43 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 43 (expression -> LPAREN expression RPAREN .)


state 71

    (15) assign_statement -> lvalue EQUALS expression . SEMICOLON
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       shift and go to state 82
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 72

    (18) if_statement -> IF LPAREN expression . RPAREN block
    (19) if_statement -> IF LPAREN expression . RPAREN block ELSE block
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    RPAREN          shift and go to state 83
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 73

    (20) while_statement -> WHILE LPAREN expression . RPAREN block
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    RPAREN          shift and go to state 84
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 74

    (21) for_statement -> FOR LPAREN assign_statement . expression SEMICOLON assign_statement RPAREN block
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 85

state 75

    (17) lvalue -> expression . LBRACKET expression RBRACKET
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    LBRACKET        shift and go to state 42
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 76

    (16) lvalue -> ID .
    (48) expression -> ID .

    EQUALS          reduce using rule 16 (lvalue -> ID .)
    LBRACKET        reduce using rule 48 (expression -> ID .)
    PLUS            reduce using rule 48 (expression -> ID .)
    MINUS           reduce using rule 48 (expression -> ID .)
    MULT            reduce using rule 48 (expression -> ID .)
    DIVIDE          reduce using rule 48 (expression -> ID .)
    MODULE          reduce using rule 48 (expression -> ID .)
    LESS            reduce using rule 48 (expression -> ID .)
    GREATER         reduce using rule 48 (expression -> ID .)
    LESSEQ          reduce using rule 48 (expression -> ID .)
    GREATEREQ       reduce using rule 48 (expression -> ID .)
    EQ              reduce using rule 48 (expression -> ID .)
    NEQ             reduce using rule 48 (expression -> ID .)
    AND             reduce using rule 48 (expression -> ID .)
    OR              reduce using rule 48 (expression -> ID .)


state 77

    (22) function_definition -> FUNC ID LPAREN . parameters RPAREN block
    (23) parameters -> . parameters COMMA ID
    (24) parameters -> . ID
    (25) parameters -> . empty
    (49) empty -> .

    ID              shift and go to state 86
    RPAREN          reduce using rule 49 (empty -> .)
    COMMA           reduce using rule 49 (empty -> .)

    parameters                     shift and go to state 87
    empty                          shift and go to state 88

state 78

    (27) return_statement -> RETURN expression SEMICOLON .

    PRINT           reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    FUNC            reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    NOT             reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    CHAR            reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    $end            reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)
    RKEY            reduce using rule 27 (return_statement -> RETURN expression SEMICOLON .)


state 79

    (17) lvalue -> expression LBRACKET expression RBRACKET .

    EQUALS          reduce using rule 17 (lvalue -> expression LBRACKET expression RBRACKET .)


state 80

    (12) print_statement -> PRINT LPAREN print_arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 89


state 81

    (13) print_arguments -> print_arguments COMMA . expression
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 45

    expression                     shift and go to state 90

state 82

    (15) assign_statement -> lvalue EQUALS expression SEMICOLON .

    PRINT           reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    IF              reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    FOR             reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    FUNC            reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    NOT             reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    LPAREN          reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    STRING          reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    CHAR            reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    ID              reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    $end            reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    RKEY            reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)
    RPAREN          reduce using rule 15 (assign_statement -> lvalue EQUALS expression SEMICOLON .)


state 83

    (18) if_statement -> IF LPAREN expression RPAREN . block
    (19) if_statement -> IF LPAREN expression RPAREN . block ELSE block
    (26) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 92

    block                          shift and go to state 91

state 84

    (20) while_statement -> WHILE LPAREN expression RPAREN . block
    (26) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 92

    block                          shift and go to state 93

state 85

    (21) for_statement -> FOR LPAREN assign_statement expression . SEMICOLON assign_statement RPAREN block
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    SEMICOLON       shift and go to state 94
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 86

    (24) parameters -> ID .

    RPAREN          reduce using rule 24 (parameters -> ID .)
    COMMA           reduce using rule 24 (parameters -> ID .)


state 87

    (22) function_definition -> FUNC ID LPAREN parameters . RPAREN block
    (23) parameters -> parameters . COMMA ID

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 96


state 88

    (25) parameters -> empty .

    RPAREN          reduce using rule 25 (parameters -> empty .)
    COMMA           reduce using rule 25 (parameters -> empty .)


state 89

    (12) print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .

    PRINT           reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    IF              reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    WHILE           reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FOR             reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    FUNC            reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    NOT             reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    MINUS           reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    LPAREN          reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    NUMBER          reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    STRING          reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    CHAR            reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    ID              reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    $end            reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)
    RKEY            reduce using rule 12 (print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON .)


state 90

    (13) print_arguments -> print_arguments COMMA expression .
    (28) expression -> expression . PLUS expression
    (29) expression -> expression . MINUS expression
    (30) expression -> expression . MULT expression
    (31) expression -> expression . DIVIDE expression
    (32) expression -> expression . MODULE expression
    (33) expression -> expression . LESS expression
    (34) expression -> expression . GREATER expression
    (35) expression -> expression . LESSEQ expression
    (36) expression -> expression . GREATEREQ expression
    (37) expression -> expression . EQ expression
    (38) expression -> expression . NEQ expression
    (39) expression -> expression . AND expression
    (40) expression -> expression . OR expression

    RPAREN          reduce using rule 13 (print_arguments -> print_arguments COMMA expression .)
    COMMA           reduce using rule 13 (print_arguments -> print_arguments COMMA expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    MODULE          shift and go to state 33
    LESS            shift and go to state 34
    GREATER         shift and go to state 35
    LESSEQ          shift and go to state 36
    GREATEREQ       shift and go to state 37
    EQ              shift and go to state 38
    NEQ             shift and go to state 39
    AND             shift and go to state 40
    OR              shift and go to state 41


state 91

    (18) if_statement -> IF LPAREN expression RPAREN block .
    (19) if_statement -> IF LPAREN expression RPAREN block . ELSE block

    PRINT           reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    FUNC            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    NOT             reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    MINUS           reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    STRING          reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    CHAR            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    BOOLEAN         reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    ID              reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    RKEY            reduce using rule 18 (if_statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 97


state 92

    (26) block -> LKEY . statement_list RKEY
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . expression SEMICOLON
    (12) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (15) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (18) if_statement -> . IF LPAREN expression RPAREN block
    (19) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (20) while_statement -> . WHILE LPAREN expression RPAREN block
    (21) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (22) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (27) return_statement -> . RETURN expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID
    (16) lvalue -> . ID
    (17) lvalue -> . expression LBRACKET expression RBRACKET

    PRINT           shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUNC            shift and go to state 18
    RETURN          shift and go to state 20
    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 19

    statement_list                 shift and go to state 98
    statement                      shift and go to state 3
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 11
    lvalue                         shift and go to state 14

state 93

    (20) while_statement -> WHILE LPAREN expression RPAREN block .

    PRINT           reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    FUNC            reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    NOT             reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    MINUS           reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    LPAREN          reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    STRING          reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    CHAR            reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    BOOLEAN         reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)
    RKEY            reduce using rule 20 (while_statement -> WHILE LPAREN expression RPAREN block .)


state 94

    (21) for_statement -> FOR LPAREN assign_statement expression SEMICOLON . assign_statement RPAREN block
    (15) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (16) lvalue -> . ID
    (17) lvalue -> . expression LBRACKET expression RBRACKET
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID

    ID              shift and go to state 76
    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26

    assign_statement               shift and go to state 99
    expression                     shift and go to state 75
    lvalue                         shift and go to state 14

state 95

    (22) function_definition -> FUNC ID LPAREN parameters RPAREN . block
    (26) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 92

    block                          shift and go to state 100

state 96

    (23) parameters -> parameters COMMA . ID

    ID              shift and go to state 101


state 97

    (19) if_statement -> IF LPAREN expression RPAREN block ELSE . block
    (26) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 92

    block                          shift and go to state 102

state 98

    (26) block -> LKEY statement_list . RKEY
    (2) statement_list -> statement_list . statement
    (4) statement -> . print_statement
    (5) statement -> . assign_statement
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_definition
    (10) statement -> . return_statement
    (11) statement -> . expression SEMICOLON
    (12) print_statement -> . PRINT LPAREN print_arguments RPAREN SEMICOLON
    (15) assign_statement -> . lvalue EQUALS expression SEMICOLON
    (18) if_statement -> . IF LPAREN expression RPAREN block
    (19) if_statement -> . IF LPAREN expression RPAREN block ELSE block
    (20) while_statement -> . WHILE LPAREN expression RPAREN block
    (21) for_statement -> . FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block
    (22) function_definition -> . FUNC ID LPAREN parameters RPAREN block
    (27) return_statement -> . RETURN expression SEMICOLON
    (28) expression -> . expression PLUS expression
    (29) expression -> . expression MINUS expression
    (30) expression -> . expression MULT expression
    (31) expression -> . expression DIVIDE expression
    (32) expression -> . expression MODULE expression
    (33) expression -> . expression LESS expression
    (34) expression -> . expression GREATER expression
    (35) expression -> . expression LESSEQ expression
    (36) expression -> . expression GREATEREQ expression
    (37) expression -> . expression EQ expression
    (38) expression -> . expression NEQ expression
    (39) expression -> . expression AND expression
    (40) expression -> . expression OR expression
    (41) expression -> . NOT expression
    (42) expression -> . MINUS expression
    (43) expression -> . LPAREN expression RPAREN
    (44) expression -> . NUMBER
    (45) expression -> . STRING
    (46) expression -> . CHAR
    (47) expression -> . BOOLEAN
    (48) expression -> . ID
    (16) lvalue -> . ID
    (17) lvalue -> . expression LBRACKET expression RBRACKET

    RKEY            shift and go to state 103
    PRINT           shift and go to state 12
    IF              shift and go to state 15
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    FUNC            shift and go to state 18
    RETURN          shift and go to state 20
    NOT             shift and go to state 22
    MINUS           shift and go to state 21
    LPAREN          shift and go to state 13
    NUMBER          shift and go to state 23
    STRING          shift and go to state 24
    CHAR            shift and go to state 25
    BOOLEAN         shift and go to state 26
    ID              shift and go to state 19

    statement                      shift and go to state 27
    print_statement                shift and go to state 4
    assign_statement               shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    for_statement                  shift and go to state 8
    function_definition            shift and go to state 9
    return_statement               shift and go to state 10
    expression                     shift and go to state 11
    lvalue                         shift and go to state 14

state 99

    (21) for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement . RPAREN block

    RPAREN          shift and go to state 104


state 100

    (22) function_definition -> FUNC ID LPAREN parameters RPAREN block .

    PRINT           reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    IF              reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    WHILE           reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    FOR             reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    FUNC            reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    RETURN          reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    NOT             reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    MINUS           reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    LPAREN          reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    NUMBER          reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    STRING          reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    CHAR            reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    BOOLEAN         reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    ID              reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    $end            reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)
    RKEY            reduce using rule 22 (function_definition -> FUNC ID LPAREN parameters RPAREN block .)


state 101

    (23) parameters -> parameters COMMA ID .

    RPAREN          reduce using rule 23 (parameters -> parameters COMMA ID .)
    COMMA           reduce using rule 23 (parameters -> parameters COMMA ID .)


state 102

    (19) if_statement -> IF LPAREN expression RPAREN block ELSE block .

    PRINT           reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    FUNC            reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    NOT             reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    MINUS           reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    LPAREN          reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    STRING          reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    CHAR            reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    BOOLEAN         reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    ID              reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)
    RKEY            reduce using rule 19 (if_statement -> IF LPAREN expression RPAREN block ELSE block .)


state 103

    (26) block -> LKEY statement_list RKEY .

    ELSE            reduce using rule 26 (block -> LKEY statement_list RKEY .)
    PRINT           reduce using rule 26 (block -> LKEY statement_list RKEY .)
    IF              reduce using rule 26 (block -> LKEY statement_list RKEY .)
    WHILE           reduce using rule 26 (block -> LKEY statement_list RKEY .)
    FOR             reduce using rule 26 (block -> LKEY statement_list RKEY .)
    FUNC            reduce using rule 26 (block -> LKEY statement_list RKEY .)
    RETURN          reduce using rule 26 (block -> LKEY statement_list RKEY .)
    NOT             reduce using rule 26 (block -> LKEY statement_list RKEY .)
    MINUS           reduce using rule 26 (block -> LKEY statement_list RKEY .)
    LPAREN          reduce using rule 26 (block -> LKEY statement_list RKEY .)
    NUMBER          reduce using rule 26 (block -> LKEY statement_list RKEY .)
    STRING          reduce using rule 26 (block -> LKEY statement_list RKEY .)
    CHAR            reduce using rule 26 (block -> LKEY statement_list RKEY .)
    BOOLEAN         reduce using rule 26 (block -> LKEY statement_list RKEY .)
    ID              reduce using rule 26 (block -> LKEY statement_list RKEY .)
    $end            reduce using rule 26 (block -> LKEY statement_list RKEY .)
    RKEY            reduce using rule 26 (block -> LKEY statement_list RKEY .)


state 104

    (21) for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN . block
    (26) block -> . LKEY statement_list RKEY

    LKEY            shift and go to state 92

    block                          shift and go to state 105

state 105

    (21) for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .

    PRINT           reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    IF              reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    WHILE           reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    FOR             reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    FUNC            reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    RETURN          reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    NOT             reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    MINUS           reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    LPAREN          reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    NUMBER          reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    STRING          reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    CHAR            reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    BOOLEAN         reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    ID              reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    $end            reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)
    RKEY            reduce using rule 21 (for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block .)

