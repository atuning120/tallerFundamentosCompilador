
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDleftEQNEQleftLESSGREATERLESSEQGREATEREQleftPLUSMINUSleftMULTDIVIDEMODULErightNOTrightUMINUSAND BOOLEAN CHAR COMMA DIVIDE DOT ELSE EQ EQUALS EXPLODE FOR FUNC GET GREATER GREATEREQ ID IF INPUT INSERT LBRACKET LESS LESSEQ LKEY LPAREN MINUS MODULE MULT NEQ NOT NUMBER OR PLUS PRINT RBRACKET RETURN RKEY RPAREN SEMICOLON SIZE STRING WHILEprogram : statement_liststatement_list : statement_list statement\n| statementstatement : print_statement\n| assign_statement\n| if_statement\n| while_statement\n| for_statement\n| function_definition\n| return_statement\n| expression SEMICOLONprint_statement : PRINT LPAREN print_arguments RPAREN SEMICOLONprint_arguments : print_arguments COMMA expression\n| expressionassign_statement : lvalue EQUALS expression SEMICOLONlvalue : ID\n| expression LBRACKET expression RBRACKETargument_list : argument_list COMMA expression\n| expressionif_statement : IF LPAREN expression RPAREN block\n| IF LPAREN expression RPAREN block ELSE blockwhile_statement : WHILE LPAREN expression RPAREN blockfor_statement : FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN blockfunction_definition : FUNC ID LPAREN parameters RPAREN blockexpression : ID LPAREN argument_list RPARENparameters : parameters COMMA ID\n| ID\n| emptyblock : LKEY statement_list RKEYreturn_statement : RETURN expression SEMICOLONexpression : expression DOT INSERT LPAREN expression RPARENexpression : expression DOT EXPLODE LPAREN expression RPARENexpression : expression DOT SIZE LPAREN RPARENexpression : expression DOT GET LPAREN expression RPARENexpression : expression PLUS expression\n| expression MINUS expression\n| expression MULT expression\n| expression DIVIDE expression\n| expression MODULE expression\n| expression LESS expression\n| expression GREATER expression\n| expression LESSEQ expression\n| expression GREATEREQ expression\n| expression EQ expression\n| expression NEQ expression\n| expression AND expression\n| expression OR expression\n| NOT expression %prec UMINUS\n| MINUS expression %prec UMINUS\n| LPAREN expression RPAREN\n| NUMBER\n| STRING\n| CHAR\n| BOOLEAN\n| ID\n| LBRACKET list_elements RBRACKETlist_elements : expression\n| list_elements COMMA expressionempty :'
    
_lr_action_items = {'PRINT':([0,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,116,117,126,128,130,131,133,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,12,-22,12,-24,-21,-29,-23,]),'IF':([0,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,116,117,126,128,130,131,133,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,15,-22,15,-24,-21,-29,-23,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,116,117,126,128,130,131,133,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,16,-22,16,-24,-21,-29,-23,]),'FOR':([0,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,116,117,126,128,130,131,133,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,17,-22,17,-24,-21,-29,-23,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,116,117,126,128,130,131,133,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,18,-22,18,-24,-21,-29,-23,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,116,117,126,128,130,131,133,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,20,-22,20,-24,-21,-29,-23,]),'ID':([0,2,3,4,5,6,7,8,9,10,13,18,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,86,89,91,92,93,95,98,99,107,113,115,116,117,118,120,126,128,130,131,133,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,47,52,47,47,47,47,-2,-11,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,85,47,47,103,-30,47,47,47,47,47,-15,47,-12,-20,19,-22,85,129,19,-24,-21,-29,-23,]),'NOT':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,89,91,92,93,95,98,99,107,113,115,116,117,118,126,128,130,131,133,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,22,22,22,22,22,-2,-11,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-30,22,22,22,22,22,-15,22,-12,-20,22,-22,22,22,-24,-21,-29,-23,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,13,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,88,89,90,91,92,93,95,98,99,102,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,124,126,128,130,131,133,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,32,21,-55,21,21,21,-51,-52,-53,-54,21,-2,-11,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,32,-55,21,21,21,21,21,32,-49,-48,32,-35,-36,-37,-38,-39,32,32,32,32,32,32,32,32,32,32,-50,32,32,32,21,32,-55,32,-30,-56,21,21,21,21,21,-15,32,-25,21,32,32,32,-33,32,-12,32,-20,21,-22,21,32,-31,-32,-34,21,-24,-21,-29,-23,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,15,16,17,19,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,59,60,61,62,83,85,89,91,92,93,95,98,99,107,113,115,116,117,118,126,128,130,131,133,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,45,13,49,50,51,53,13,13,13,13,-2,-11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,53,13,13,13,13,86,13,92,93,94,95,13,53,-30,13,13,13,13,13,-15,13,-12,-20,13,-22,13,13,-24,-21,-29,-23,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,89,91,92,93,95,98,99,107,113,115,116,117,118,126,128,130,131,133,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,23,23,23,23,23,-2,-11,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-30,23,23,23,23,23,-15,23,-12,-20,23,-22,23,23,-24,-21,-29,-23,]),'STRING':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,89,91,92,93,95,98,99,107,113,115,116,117,118,126,128,130,131,133,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,24,24,24,24,24,-2,-11,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-30,24,24,24,24,24,-15,24,-12,-20,24,-22,24,24,-24,-21,-29,-23,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,89,91,92,93,95,98,99,107,113,115,116,117,118,126,128,130,131,133,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,25,25,25,25,25,-2,-11,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-30,25,25,25,25,25,-15,25,-12,-20,25,-22,25,25,-24,-21,-29,-23,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,10,13,20,21,22,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,89,91,92,93,95,98,99,107,113,115,116,117,118,126,128,130,131,133,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,26,26,26,26,26,-2,-11,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-30,26,26,26,26,26,-15,26,-12,-20,26,-22,26,26,-24,-21,-29,-23,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,13,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,55,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,83,84,85,89,90,91,92,93,95,98,99,106,107,111,113,115,116,117,118,122,123,124,126,128,130,131,133,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,44,27,-55,27,27,27,-51,-52,-53,-54,27,-2,-11,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-55,27,27,27,27,27,-49,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-50,27,44,-55,-30,-56,27,27,27,27,27,-15,-25,27,-33,-12,-20,27,-22,27,-31,-32,-34,27,-24,-21,-29,-23,]),'$end':([1,2,3,4,5,6,7,8,9,10,28,29,89,99,113,115,117,128,130,131,133,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,-22,-24,-21,-29,-23,]),'RKEY':([3,4,5,6,7,8,9,10,28,29,89,99,113,115,117,126,128,130,131,133,],[-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-30,-15,-12,-20,-22,131,-24,-21,-29,-23,]),'SEMICOLON':([11,19,23,24,25,26,47,54,55,56,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,90,97,102,106,111,122,123,124,],[29,-55,-51,-52,-53,-54,-55,89,-49,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-50,99,-56,113,118,-25,-33,-31,-32,-34,]),'DOT':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[30,-55,-51,-52,-53,-54,30,-55,30,-49,-48,30,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,30,30,-50,30,30,30,30,-55,30,-56,30,-25,30,30,30,-33,30,30,30,-31,-32,-34,]),'PLUS':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[31,-55,-51,-52,-53,-54,31,-55,31,-49,-48,31,-35,-36,-37,-38,-39,31,31,31,31,31,31,31,31,31,31,-50,31,31,31,31,-55,31,-56,31,-25,31,31,31,-33,31,31,31,-31,-32,-34,]),'MULT':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[33,-55,-51,-52,-53,-54,33,-55,33,-49,-48,33,33,33,-37,-38,-39,33,33,33,33,33,33,33,33,33,33,-50,33,33,33,33,-55,33,-56,33,-25,33,33,33,-33,33,33,33,-31,-32,-34,]),'DIVIDE':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[34,-55,-51,-52,-53,-54,34,-55,34,-49,-48,34,34,34,-37,-38,-39,34,34,34,34,34,34,34,34,34,34,-50,34,34,34,34,-55,34,-56,34,-25,34,34,34,-33,34,34,34,-31,-32,-34,]),'MODULE':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[35,-55,-51,-52,-53,-54,35,-55,35,-49,-48,35,35,35,-37,-38,-39,35,35,35,35,35,35,35,35,35,35,-50,35,35,35,35,-55,35,-56,35,-25,35,35,35,-33,35,35,35,-31,-32,-34,]),'LESS':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[36,-55,-51,-52,-53,-54,36,-55,36,-49,-48,36,-35,-36,-37,-38,-39,-40,-41,-42,-43,36,36,36,36,36,36,-50,36,36,36,36,-55,36,-56,36,-25,36,36,36,-33,36,36,36,-31,-32,-34,]),'GREATER':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[37,-55,-51,-52,-53,-54,37,-55,37,-49,-48,37,-35,-36,-37,-38,-39,-40,-41,-42,-43,37,37,37,37,37,37,-50,37,37,37,37,-55,37,-56,37,-25,37,37,37,-33,37,37,37,-31,-32,-34,]),'LESSEQ':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[38,-55,-51,-52,-53,-54,38,-55,38,-49,-48,38,-35,-36,-37,-38,-39,-40,-41,-42,-43,38,38,38,38,38,38,-50,38,38,38,38,-55,38,-56,38,-25,38,38,38,-33,38,38,38,-31,-32,-34,]),'GREATEREQ':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[39,-55,-51,-52,-53,-54,39,-55,39,-49,-48,39,-35,-36,-37,-38,-39,-40,-41,-42,-43,39,39,39,39,39,39,-50,39,39,39,39,-55,39,-56,39,-25,39,39,39,-33,39,39,39,-31,-32,-34,]),'EQ':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[40,-55,-51,-52,-53,-54,40,-55,40,-49,-48,40,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,40,40,40,40,-50,40,40,40,40,-55,40,-56,40,-25,40,40,40,-33,40,40,40,-31,-32,-34,]),'NEQ':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[41,-55,-51,-52,-53,-54,41,-55,41,-49,-48,41,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,41,41,41,41,-50,41,41,41,41,-55,41,-56,41,-25,41,41,41,-33,41,41,41,-31,-32,-34,]),'AND':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[42,-55,-51,-52,-53,-54,42,-55,42,-49,-48,42,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,42,42,42,-50,42,42,42,42,-55,42,-56,42,-25,42,42,42,-33,42,42,42,-31,-32,-34,]),'OR':([11,19,23,24,25,26,46,47,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,84,85,88,90,102,106,108,109,110,111,112,114,121,122,123,124,],[43,-55,-51,-52,-53,-54,43,-55,43,-49,-48,43,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,43,43,-50,43,43,43,43,-55,43,-56,43,-25,43,43,43,-33,43,43,43,-31,-32,-34,]),'EQUALS':([14,19,85,96,],[48,-16,-16,-17,]),'RPAREN':([23,24,25,26,46,47,55,56,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,81,82,86,87,88,90,94,99,103,104,105,106,109,110,111,112,114,121,122,123,124,127,129,],[-51,-52,-53,-54,79,-55,-49,-48,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,97,-14,-50,100,101,-59,106,-19,-56,111,-15,-27,119,-28,-25,122,123,-33,124,-13,-18,-31,-32,-34,132,-26,]),'RBRACKET':([23,24,25,26,47,55,56,57,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,79,90,106,108,111,122,123,124,],[-51,-52,-53,-54,-55,-49,-48,90,-57,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,96,-50,-56,-25,-58,-33,-31,-32,-34,]),'COMMA':([23,24,25,26,47,55,56,57,58,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,86,87,88,90,103,104,105,106,108,111,114,121,122,123,124,129,],[-51,-52,-53,-54,-55,-49,-48,91,-57,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,98,-14,-50,-59,107,-19,-56,-27,120,-28,-25,-58,-33,-13,-18,-31,-32,-34,-26,]),'INSERT':([30,],[59,]),'EXPLODE':([30,],[60,]),'SIZE':([30,],[61,]),'GET':([30,],[62,]),'LKEY':([100,101,119,125,132,],[116,116,116,116,116,]),'ELSE':([115,131,],[125,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,116,],[2,126,]),'statement':([0,2,116,126,],[3,28,3,28,]),'print_statement':([0,2,116,126,],[4,4,4,4,]),'assign_statement':([0,2,51,116,118,126,],[5,5,83,5,127,5,]),'if_statement':([0,2,116,126,],[6,6,6,6,]),'while_statement':([0,2,116,126,],[7,7,7,7,]),'for_statement':([0,2,116,126,],[8,8,8,8,]),'function_definition':([0,2,116,126,],[9,9,9,9,]),'return_statement':([0,2,116,126,],[10,10,10,10,]),'expression':([0,2,13,20,21,22,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,53,83,91,92,93,95,98,107,116,118,126,],[11,11,46,54,55,56,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,80,81,82,84,88,102,108,109,110,112,114,121,11,84,11,]),'lvalue':([0,2,51,116,118,126,],[14,14,14,14,14,14,]),'list_elements':([27,],[57,]),'print_arguments':([45,],[77,]),'argument_list':([53,],[87,]),'parameters':([86,],[104,]),'empty':([86,],[105,]),'block':([100,101,119,125,132,],[115,117,128,130,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',263),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',269),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',270),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',277),
  ('statement -> assign_statement','statement',1,'p_statement','parser.py',278),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',279),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',280),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',281),
  ('statement -> function_definition','statement',1,'p_statement','parser.py',282),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',283),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',284),
  ('print_statement -> PRINT LPAREN print_arguments RPAREN SEMICOLON','print_statement',5,'p_print_statement','parser.py',291),
  ('print_arguments -> print_arguments COMMA expression','print_arguments',3,'p_print_arguments','parser.py',295),
  ('print_arguments -> expression','print_arguments',1,'p_print_arguments','parser.py',296),
  ('assign_statement -> lvalue EQUALS expression SEMICOLON','assign_statement',4,'p_assign_statement','parser.py',303),
  ('lvalue -> ID','lvalue',1,'p_lvalue','parser.py',307),
  ('lvalue -> expression LBRACKET expression RBRACKET','lvalue',4,'p_lvalue','parser.py',308),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',316),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',317),
  ('if_statement -> IF LPAREN expression RPAREN block','if_statement',5,'p_if_statement','parser.py',324),
  ('if_statement -> IF LPAREN expression RPAREN block ELSE block','if_statement',7,'p_if_statement','parser.py',325),
  ('while_statement -> WHILE LPAREN expression RPAREN block','while_statement',5,'p_while_statement','parser.py',332),
  ('for_statement -> FOR LPAREN assign_statement expression SEMICOLON assign_statement RPAREN block','for_statement',8,'p_for_statement','parser.py',336),
  ('function_definition -> FUNC ID LPAREN parameters RPAREN block','function_definition',6,'p_function_definition','parser.py',340),
  ('expression -> ID LPAREN argument_list RPAREN','expression',4,'p_function_call','parser.py',344),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','parser.py',348),
  ('parameters -> ID','parameters',1,'p_parameters','parser.py',349),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',350),
  ('block -> LKEY statement_list RKEY','block',3,'p_block','parser.py',357),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',361),
  ('expression -> expression DOT INSERT LPAREN expression RPAREN','expression',6,'p_expression_insert','parser.py',366),
  ('expression -> expression DOT EXPLODE LPAREN expression RPAREN','expression',6,'p_expression_explode','parser.py',370),
  ('expression -> expression DOT SIZE LPAREN RPAREN','expression',5,'p_expression_size','parser.py',375),
  ('expression -> expression DOT GET LPAREN expression RPAREN','expression',6,'p_expression_get','parser.py',379),
  ('expression -> expression PLUS expression','expression',3,'p_expression_general','parser.py',384),
  ('expression -> expression MINUS expression','expression',3,'p_expression_general','parser.py',385),
  ('expression -> expression MULT expression','expression',3,'p_expression_general','parser.py',386),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_general','parser.py',387),
  ('expression -> expression MODULE expression','expression',3,'p_expression_general','parser.py',388),
  ('expression -> expression LESS expression','expression',3,'p_expression_general','parser.py',389),
  ('expression -> expression GREATER expression','expression',3,'p_expression_general','parser.py',390),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_general','parser.py',391),
  ('expression -> expression GREATEREQ expression','expression',3,'p_expression_general','parser.py',392),
  ('expression -> expression EQ expression','expression',3,'p_expression_general','parser.py',393),
  ('expression -> expression NEQ expression','expression',3,'p_expression_general','parser.py',394),
  ('expression -> expression AND expression','expression',3,'p_expression_general','parser.py',395),
  ('expression -> expression OR expression','expression',3,'p_expression_general','parser.py',396),
  ('expression -> NOT expression','expression',2,'p_expression_general','parser.py',397),
  ('expression -> MINUS expression','expression',2,'p_expression_general','parser.py',398),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_general','parser.py',399),
  ('expression -> NUMBER','expression',1,'p_expression_general','parser.py',400),
  ('expression -> STRING','expression',1,'p_expression_general','parser.py',401),
  ('expression -> CHAR','expression',1,'p_expression_general','parser.py',402),
  ('expression -> BOOLEAN','expression',1,'p_expression_general','parser.py',403),
  ('expression -> ID','expression',1,'p_expression_general','parser.py',404),
  ('expression -> LBRACKET list_elements RBRACKET','expression',3,'p_expression_general','parser.py',405),
  ('list_elements -> expression','list_elements',1,'p_list_elements','parser.py',437),
  ('list_elements -> list_elements COMMA expression','list_elements',3,'p_list_elements','parser.py',438),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',445),
]
